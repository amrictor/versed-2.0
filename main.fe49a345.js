(()=>{var e={4146:(e,t,n)=>{"use strict";var r=n(7294),a=n(3935),o=n(4751);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var i=n(3727),c=n(3038),s=n.n(c),l=n(4890),u=n(5977),f=n(6010),d=n(3457),p=n(319),m=n.n(p),g=n(2098),h=n(5784),y=n(1246),v=n(3770),E=n(6652),b=n(7812),S=n(6479),x=n.n(S);const k=function(e){var t=e.playing,n=e.songId,a=x()(e,["playing","songId"]),o=(0,r.useState)(0),i=s()(o,2),c=i[0],l=i[1];(0,r.useEffect)((function(){l(0)}),[n]),(0,r.useEffect)((function(){var e;return t?e=setInterval(u,1e3):clearInterval(e),function(){return clearInterval(e)}}),[t]);var u=function(){l((function(e){return e+1}))},f=function(e){if(e<100)return("0"+e).slice(-2)};return r.createElement("div",a,f(Math.floor(c/3600)%24),":",f(Math.floor(c/60)%60),":",f(c%60))};var w=n(4575),O=n.n(w),T=n(3913),N=n.n(T),C=n(2205),P=n.n(C),A=n(8585),I=n.n(A),j=n(9754),_=n.n(j),R=n(8679),Z=n.n(R),L=n(9713),U=n.n(L),G=n(1143),z=n.n(G),D=n(1609),W=n.n(D),B=n(3560),F=n.n(B),Y=n(7037),M=n.n(Y),H=n(3945),K=n.n(H),J=n(3218),q=n.n(J);const $=function(e){var t={dispatch:F(),subscribe:F(),getState:F(),replaceReducer:F(),runSaga:F(),injectedReducers:q(),injectedSagas:q()};z()(K()(e,t),"(app/utils...) injectors: Expected a valid redux store")};function V(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function X(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?V(Object(n),!0).forEach((function(t){U()(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):V(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var Q="@@saga-injector/daemon",ee="@@saga-injector/once-till-unmount",te=["@@saga-injector/restart-on-remount",Q,ee],ne=function(e){return z()(M()(e)&&!W()(e),"(app/utils...) injectSaga: Expected `key` to be a non empty string")},re=function(e){var t={saga:F(),mode:function(e){return M()(e)&&te.includes(e)}};z()(K()(e,t),"(app/utils...) injectSaga: Expected a valid saga descriptor")};function ae(e,t){return function(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2?arguments[2]:void 0;t||$(e);var o=X(X({},r),{},{mode:r.mode||Q}),i=o.saga,c=o.mode;ne(n),re(o);var s=Reflect.has(e.injectedSagas,n);(!s||s&&c!==Q&&c!==ee)&&(e.injectedSagas[n]=X(X({},o),{},{task:e.runSaga(i,a)}))}}function oe(e,t){return function(n){if(t||$(e),ne(n),Reflect.has(e.injectedSagas,n)){var r=e.injectedSagas[n];r.mode&&r.mode!==Q&&(r.task.cancel(),e.injectedSagas[n]="done")}}}const ie=function(e){var t=e.key,n=e.saga,a=e.mode;return function(e){var i=function(o){P()(l,o);var i,c,s=(i=l,c=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=_()(i);if(c){var n=_()(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return I()(this,e)});function l(e,r){var o;return O()(this,l),(o=s.call(this,e,r)).injectors=function(e){return $(e),{injectSaga:ae(e,!0),ejectSaga:oe(e,!0)}}(r.store),o.injectors.injectSaga(t,{saga:n,mode:a},o.props),o}return N()(l,[{key:"componentWillUnmount",value:function(){this.injectors.ejectSaga(t)}},{key:"render",value:function(){return r.createElement(e,this.props)}}]),l}(r.Component);return i.WrappedComponent=e,i.contextType=o.ET,i.displayName="withSaga(".concat(e.displayName||e.name||"Component",")"),Z()(i,e)}};var ce=n(5369),se=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r="string"!=typeof t?JSON.stringify(t):t,a=(Math.ceil(r.length/4e3),new Date);a.setTime(a.getTime()+24*n*60*60*1e3);var o=0===n?"":"expires="+a.toUTCString()+";path=/";document.cookie=e+"="+r+";"+o},le=function(e,t){var n="string"!=typeof t?JSON.stringify(t):t;localStorage.setItem(e,n)};function ue(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}var fe=(0,ce.d0)(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?ue(Object(n),!0).forEach((function(t){U()(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):ue(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},function(e){var t=function(e){for(var t="settings=",n=document.cookie.split(";"),r=0;r<n.length;r++){for(var a=n[r];" "===a.charAt(0);)a=a.substring(1);if(0===a.indexOf(t))return a.substring(t.length,a.length)}return""}();try{return JSON.parse(t)}catch(e){return t}}()||{theme:"light",playOnLoad:!0,seed:"",spotifyToken:null}));const de=function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:fe,n=arguments.length>1?arguments[1]:void 0;switch(n.type){case"SET_THEME":e=t.set("theme",n.theme);break;case"SET_PLAY_ON_LOAD":e=t.set("playOnLoad",n.playOnLoad);break;case"SET_SEED":e=t.set("seed",n.seed);break;case"SET_SPOTIFY_TOKEN":e=t.set("spotifyToken",n.token);break;default:return t}return se("settings",e.toJSON(),365),e};function pe(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function me(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?pe(Object(n),!0).forEach((function(t){U()(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):pe(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}const ge=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=(0,l.UY)(me({global:de},e));return t};function he(e,t){return function(n,r){t||$(e),z()(M()(n)&&!W()(n)&&F()(r),"(app/utils...) injectReducer: Expected `reducer` to be a reducer function"),Reflect.has(e.injectedReducers,n)&&e.injectedReducers[n]===r||(e.injectedReducers[n]=r,e.replaceReducer(ge(e.injectedReducers)))}}const ye=function(e){var t=e.key,n=e.reducer;return function(e){var a=function(a){P()(s,a);var o,i,c=(o=s,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=_()(o);if(i){var n=_()(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return I()(this,e)});function s(e,r){var a;return O()(this,s),a=c.call(this,e,r),function(e){return $(e),{injectReducer:he(e,!0)}}(r.store).injectReducer(t,n),a}return N()(s,[{key:"render",value:function(){return r.createElement(e,this.props)}}]),s}(r.Component);return a.WrappedComponent=e,a.contextType=o.ET,a.displayName="withReducer(".concat(e.displayName||e.name||"Component",")"),Z()(a,e)}};var ve=!0,Ee=(0,ce.d0)({currentSong:null,currentSource:null,currentSourceMeta:null,currentIndex:0,shuffle:!1,shuffleMap:null,spotifyPlaylists:null,spotifyPlaylistsOffset:0,totalSpotifyPlaylists:null,playing:ve,hasWon:!1,hasForfeited:!1}),be=n(7757),Se=n.n(be),xe=n(2905),ke=n.n(xe),we=n(4857);function Oe(e){return e.headers.get("Content-Type").includes("json")?e.json():e.text()}function Te(e){if(e.status>=200&&e.status<300)return 204===e.status&&(e.json=function(){return""}),e;var t=new Error(e.statusText);throw t.response=e,t}function Ne(e,t){var n=e.includes("http")?e:"https://localhost:8080".concat(e);return fetch(n,t).then(Te).then(Oe)}function Ce(e,t){return"get"===e||"delete"===e?{method:e,credentials:"same-origin",headers:{Accept:"*/*"}}:{method:"post",credentials:"same-origin",headers:{"Content-Type":"application/json",Accept:"*/*"},body:JSON.stringify(t)}}var Pe=n(2222);const Ae=function(){return(0,Pe.P1)((function(e){return e.app||fe}),(function(e){return e.toJS()}))};var Ie=function(e,t,n){return{type:"GET_SPOTIFY_SONG",id:e,push:t,controller:n}},je=function(e,t){return{type:"SET_SOURCE",source:e,meta:t}},_e=function(e){return{type:"GET_GENIUS_SONG_SUCCESS",song:e}},Re=Se().mark(ze),Ze=Se().mark(De),Le=Se().mark(We),Ue=Se().mark(Be),Ge=Se().mark(Fe);function ze(e){var t,n;return Se().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,t={id:e.id},r.next=4,Ne("/api/public/song",Ce("post",t));case 4:if(n=r.sent,e.controller){r.next=8;break}return r.next=8,(0,we.gz)(je(null));case 8:n.genius?e.push("/songs/".concat(n.genius)):alert("We can't find the lyrics for this song!"),r.next=13;break;case 11:r.prev=11,r.t0=r.catch(0);case 13:case"end":return r.stop()}}),Re,null,[[0,11]])}function De(e){var t,n,r,a,o;return Se().wrap((function(i){for(;;)switch(i.prev=i.next){case 0:return i.prev=0,i.next=4,Ne("https://api.genius.com/songs/".concat(e.id,"?access_token=").concat("4qtBMiQeR5pD1zFm-vGmFV6j5khGAiRQskTCLXyuGbxeYGbnXrTnXIyA5n2iXjdg"),Ce("get"));case 4:return t=i.sent,n=t.response,i.next=8,Ne("https://server.amrictor.com:8888/".concat(n.song.url));case 8:return r=i.sent,a=ke().load(r.replaceAll("<br/>","\n"),{ignoreWhitespace:!1}),(o={}).title=n.song.title?n.song.title:"N/A",o.album=n.song.album?n.song.album.name:"N/A",o.artist=n.song.primary_artist?n.song.primary_artist.name:"N/A",o.url=n.song.url,o.lyrics=a("div[data-lyrics-container=true]").text().replace(/\[[^\]]*\]/g,"").trim().replace(/[’‘]/g,"'").split(/[\u200B\r\n\s,?!:;().…"“”—\-–_]+/).filter((function(e){return!e.match(/^[\s']+$/)&&e})),i.next=18,(0,we.gz)(_e(o));case 18:i.next=24;break;case 20:i.prev=20,i.t0=i.catch(0),console.log(i.t0),alert("Something went wrong. Try playing a different song");case 24:case"end":return i.stop()}}),Ze,null,[[0,20]])}function We(e){var t,n,r,a,o;return Se().wrap((function(i){for(;;)switch(i.prev=i.next){case 0:return i.prev=0,i.next=3,(0,we.Ys)(Ae());case 3:t=i.sent,n=t.spotifyToken,r={accessToken:n.access,id:e.id,offset:0},a=[];case 7:if(!(r.offset<100)){i.next=17;break}return i.next=10,Ne("/api/public/album",Ce("post",r));case 10:if(o=i.sent,a=[].concat(m()(a),m()(o.items)),!(r.offset>o.total)){i.next=14;break}return i.abrupt("break",17);case 14:r.offset+=20,i.next=7;break;case 17:return i.next=19,(0,we.gz)(je(a,e.meta));case 19:i.next=24;break;case 21:i.prev=21,i.t0=i.catch(0),console.log(i.t0);case 24:case"end":return i.stop()}}),Le,null,[[0,21]])}function Be(e){var t,n,r,a,o;return Se().wrap((function(i){for(;;)switch(i.prev=i.next){case 0:return i.prev=0,i.next=3,(0,we.Ys)(Ae());case 3:t=i.sent,n=t.spotifyToken,r={accessToken:n.access,id:e.id,offset:0},a=[];case 7:if(!(r.offset<100)){i.next=17;break}return i.next=10,Ne("/api/public/playlist",Ce("post",r));case 10:if(o=i.sent,a=[].concat(m()(a),m()(o.items)),!(r.offset>o.total)){i.next=14;break}return i.abrupt("break",17);case 14:r.offset+=20,i.next=7;break;case 17:return i.next=19,(0,we.gz)(je(a,e.meta));case 19:i.next=24;break;case 21:i.prev=21,i.t0=i.catch(0),console.log(i.t0);case 24:case"end":return i.stop()}}),Ue,null,[[0,21]])}function Fe(){return Se().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,we.$6)([(0,we.Fm)("GET_SPOTIFY_SONG",ze),(0,we.Fm)("GET_GENIUS_SONG",De),(0,we.Fm)("SET_SOURCE_ALBUM",We),(0,we.Fm)("SET_SOURCE_PLAYLIST",Be)]);case 2:case"end":return e.stop()}}),Ge)}var Ye=n(8105),Me=n(2427);const He=(0,Me.Z)((function(e){return{root:{background:Ye.Z[900],color:"white",height:75,display:"flex",justifyContent:"space-between",alignItems:"center",padding:10},left:{flexGrow:0,flexShrink:0,width:"33%"},center:{display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"center",flexGrow:0,flexShrink:0,width:"33%"},right:{flexGrow:0,flexShrink:0,width:"33%"},actions:{display:"flex",justifyContent:"center",alignItems:"center"},actionBtn:{margin:5},song:{flexShrink:1,padding:"3px 0px",display:"flex",fontSize:12},songBlock:{display:"flex",alignItems:"center",padding:5,justifyContent:"space-between","& *":{flex:"0 1 1",minWidth:0},"&:hover":{backgroundColor:"rgba(0,0,0,0.4)"}},albumCover:{marginRight:5,height:45,width:45,flexShrink:0},trackInfo:{flexShrink:1,minWidth:40,"& *":{whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis"}},trackTitle:{fontWeight:600,cursor:"pointer","&:hover":{textDecoration:"underline"}},trackAlbum:{fontStyle:"italic",cursor:"pointer","&:hover":{textDecoration:"underline"}},trackArtists:{display:"flex"},trackArtist:{fontStyle:"italic",cursor:"pointer","&:hover":{textDecoration:"underline"}}}})),Ke=function(){return(0,Pe.P1)((function(e){return e.controlPanel||Ee}),(function(e){return e.toJS()}))};var Je=Ke(),qe=ye({key:"controlPanel",reducer:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Ee,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"LOAD_NEXT_SONG":var n=e.get("currentIndex"),r=e.get("currentSource"),a=n<r.length-1?n+1:0;return e.set("currentIndex",a);case"LOAD_PREV_SONG":var o=e.get("currentIndex"),i=e.get("currentSource"),c=o>0?o-1:i.length-1;return e.set("currentIndex",c);case"SET_SOURCE":return e.set("currentSong",null).set("currentIndex",0).set("currentSource",t.source).set("currentSourceMeta",t.meta||{name:"Custom Playlist"}).set("shuffle",!1).set("shuffleMap",t.source&&t.source.map((function(e,t){return t})));case"GET_GENIUS_SONG":return e.set("currentSong",null).set("playing",ve).set("hasWon",!1).set("hasForfeited",!1).set("loading",!0);case"GET_GENIUS_SONG_SUCCESS":return e.set("currentSong",t.song).set("loading",!1);case"TOGGLE_SHUFFLE":var s=e.get("currentSource").map((function(e,t){return t}));if(!e.get("shuffle"))for(var l=s.length-1;l>0;l--){var u=Math.floor(Math.random()*(l+1)),f=[s[u],s[l]];s[l]=f[0],s[u]=f[1]}return e.set("shuffle",!e.get("shuffle")).set("shuffleMap",s);case"TOGGLE_PAUSE":return e.set("playing",!e.get("playing"));case"FORFEIT":return e.set("hasForfeited",!0);case"WIN":return e.set("hasWon",!0);default:return e}}}),$e=ie({key:"controlPanel",saga:Fe});const Ve=(0,l.qC)(qe,$e)((function(){var e=(0,u.k6)(),t=(0,o.I0)(),n=He(),a=(0,o.v9)(Je),i=a.playing,c=a.shuffle,s=a.currentSong,l=a.currentSource,f=a.currentSourceMeta,d=a.currentIndex,p=a.shuffleMap,S=a.hasForfeited,x=a.hasWon;return(0,r.useEffect)((function(){l&&t(Ie(l[p[d]].id,e.push,!0))}),[d,JSON.stringify(l)]),console.log(f,l),r.createElement("div",{className:n.root},r.createElement("div",{className:n.left},l&&f&&r.createElement("div",{className:n.song},r.createElement("img",{className:n.albumCover,src:f.images&&f.images[f.images.length-1].url}),r.createElement("div",{className:n.trackInfo},r.createElement("b",null,"Playing from",f.type?" ".concat(f.type):"",":"),f.name&&r.createElement("div",{className:n.trackAlbum},f.name),f.artists&&r.createElement("div",{className:n.trackArtists},f.artists.reduce((function(e,t){return[].concat(m()(e),[r.createElement(r.Fragment,null,r.createElement("div",{className:n.trackArtist},t.name),e.length!==f.artists.length-1&&r.createElement("span",{style:{marginRight:4}},","))])}),[]))))),r.createElement("div",{className:n.center},s&&r.createElement(k,{playing:i&&!S&&!x,songId:s.id,className:n.timer}),s&&r.createElement("div",{className:n.actions},l&&r.createElement(b.Z,{style:c?{color:"#1DB954"}:{},className:n.actionBtn,size:"small",onClick:function(){return t({type:"TOGGLE_SHUFFLE"})}},r.createElement(g.Z,null)),l&&r.createElement(b.Z,{className:n.actionBtn,size:"small",onClick:function(){return t({type:"LOAD_PREV_SONG"})}},r.createElement(h.Z,null)),r.createElement(b.Z,{disabled:S||x,className:n.actionBtn,size:"small",onClick:function(){return t({type:"TOGGLE_PAUSE"})}},i?r.createElement(v.Z,null):r.createElement(E.Z,null)),l&&r.createElement(b.Z,{className:n.actionBtn,size:"small",onClick:function(){return t({type:"LOAD_NEXT_SONG"})}},r.createElement(y.Z,null))),!s&&!l&&"Nothing playing.",!s&&l&&"Loading from playlist..."),r.createElement("div",{className:n.right}))})),Xe=(0,Me.Z)({root:{background:Ye.Z[700],color:"white",height:"100%",width:"100%",padding:10},header:{fontSize:22,fontWeight:500,marginBottom:10,paddingBottom:10,borderBottom:"1px solid white"}}),Qe=function(){var e=Xe();return r.createElement("div",{className:e.root},r.createElement("div",{className:e.header},"Welcome to Versed"),r.createElement("div",null,"Versed is a lyric quiz platform developed independently using the Spotify and Genius APIs."),r.createElement("br",null),r.createElement("div",null,"Visit the settings page to integrate with your personal Spotify account."))};var et=(0,ce.d0)({tracks:[],trackOffset:0,totalTracks:null,loading:!1}),tt=function(e,t){return{type:"SEARCH_TRACKS",query:e,offset:t}},nt=Se().mark(at),rt=Se().mark(ot);function at(e){var t,n;return Se().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,t={query:e.query,offset:e.offset},r.next=4,Ne("/api/public/search",Ce("post",t));case 4:return n=r.sent,r.next=7,(0,we.gz)({type:"SEARCH_TRACKS_SUCCESS",tracks:n.items,offset:n.offset,total:n.total});case 7:r.next=13;break;case 9:return r.prev=9,r.t0=r.catch(0),r.next=13,(0,we.gz)({type:"SEARCH_TRACKS_FAILURE"});case 13:case"end":return r.stop()}}),nt,null,[[0,9]])}function ot(){return Se().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,we.$6)([(0,we.Fm)("SEARCH_TRACKS",at)]);case 2:case"end":return e.stop()}}),rt)}const it=(0,Me.Z)({root:{background:Ye.Z[700],color:"white",height:"100%",width:"100%",overflow:"auto"},search:{background:Ye.Z[700],position:"sticky",top:0,zIndex:10,padding:"10px 0px",margin:"0px 10px",display:"flex",alignItems:"center",borderBottom:"1px solid white"},button:{maxWidth:100,height:30,padding:5,cursor:"pointer",outline:"none",borderRadius:5,border:"0px",backgroundColor:Ye.Z[900],color:"white",textTransform:"uppercase",fontWeight:600,transition:".2s","&:hover":{backgroundColor:"white",color:Ye.Z[900]},"&:disabled":{backgroundColor:Ye.Z[500],color:Ye.Z[900],cursor:"default"}},input:{height:30,padding:3,flexGrow:1,outline:"none",borderRadius:8,border:"0px",boxShadow:"0px 0px red",transition:"box-shadow .2s","&:focus":{border:"0px solid black",boxShadow:"3px 3px ".concat(Ye.Z[900])},marginRight:10},trackCard:{display:"flex",padding:10,margin:5,outline:"1px solid black"},albumCover:{marginRight:10},trackTitle:{fontWeight:600},trackAlbum:{fontStyle:"italics"},trackArtists:{fontStyle:"italics"},noResults:{textAlign:"center",padding:"40px 5px"}});var ct=n(1008),st=n(5697),lt=n.n(st),ut=n(6945),ft=n(3430),dt=function(e){return{type:"SET_PLAYLIST",playlist:e}},pt=n(1120),mt=(0,pt.Z)({emptyList:{marginTop:100,display:"flex",justifyContent:"center",alignItems:"center"},song:{flexShrink:1,padding:"3px 0px",display:"flex",fontSize:12},songBlock:{display:"flex",alignItems:"center",padding:5,justifyContent:"space-between","& > *":{minWidth:0},"&:hover":{backgroundColor:"rgba(0,0,0,0.4)"}},albumCover:{marginRight:5,height:45,width:45,flexShrink:0},trackInfo:{flexShrink:1,minWidth:40,"& > *":{whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis"}},trackTitle:{fontWeight:600,cursor:"pointer","&:hover":{textDecoration:"underline"}},trackAlbum:{fontStyle:"italic",cursor:"pointer","&:hover":{textDecoration:"underline"}},trackArtists:{display:"flex",width:"100%",whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis"},trackArtist:{flexShrink:0,fontStyle:"italic",cursor:"pointer","&:hover":{textDecoration:"underline"}},actions:{display:"flex",flexShrink:0}}),gt=function(e){var t=e.tracks,n=e.customPlaylist,a=(0,u.k6)(),i=(0,o.I0)(),c=mt(),s=(0,o.v9)(Ke()).currentSong;return console.log(s),r.createElement("div",null,t&&t.map((function(e){return r.createElement("div",{className:c.songBlock,key:e.id,style:e.name===(null==s?void 0:s.title)?{border:"2px solid #1DB954"}:{}},r.createElement("div",{className:c.song},r.createElement("img",{className:c.albumCover,src:e.album.images&&3===e.album.images.length&&e.album.images[2].url}),r.createElement("div",{className:c.trackInfo},r.createElement("div",{className:c.trackTitle,onClick:function(){return function(e){i(Ie(e.id,a.push))}(e)},style:e.name===(null==s?void 0:s.title)?{color:"#1DB954",fontWeight:600}:{}},e.name),r.createElement("div",{className:c.trackAlbum,onClick:function(){return t=e.album,void a.push("/album/".concat(t.id));var t}},e.album.name),r.createElement("div",{className:c.trackArtists},e.artists.reduce((function(t,n){return[].concat(m()(t),[r.createElement(r.Fragment,{key:"".concat(e.id,"_").concat(n.id)},r.createElement("div",{className:c.trackArtist,onClick:function(){return function(e){a.push("/artist/".concat(e.id))}(n)}},n.name),t.length!==e.artists.length-1&&r.createElement("span",{style:{marginRight:4}},","))])}),[])))),r.createElement("div",{className:c.actions},n?r.createElement(b.Z,{size:"small",onClick:function(t){return function(e){i({type:"DELETE_SONG",song:e})}(e)}},r.createElement(ut.Z,null)):r.createElement(b.Z,{size:"small",onClick:function(t){return function(e){i({type:"ADD_SONG",song:e})}(e)}},r.createElement(ft.Z,null))))})),t&&0===t.length&&r.createElement("div",{className:c.emptyList},"No tracks available."))};gt.propTypes={tracks:lt().array.isRequired};const ht=gt;var yt=(0,Pe.P1)((function(e){return e.search}),(function(e){return e.toJS()})),vt=ye({key:"search",reducer:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:et,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SEARCH_TRACKS":return e.set("loading",!0);case"SEARCH_TRACKS_SUCCESS":return e.set("tracks",t.tracks).set("trackOffset",t.offset).set("totalTracks",t.total).set("loading",!1);case"SEARCH_TRACKS_FAILURE":return e.set("loading",!1);default:return e}}}),Et=ie({key:"search",saga:ot});const bt=(0,l.qC)(vt,Et)((function(){var e=it(),t=(0,o.I0)(),n=(0,o.v9)(yt),a=n.tracks,i=n.trackOffset,c=n.totalTracks,l=n.loading,u=(0,r.useState)(""),f=s()(u,2),d=f[0],p=f[1];return r.createElement("div",{className:e.root},r.createElement("div",{className:e.search},r.createElement("input",{className:e.input,value:d,onChange:function(e){return p(e.target.value)},onKeyDown:function(e){"Enter"===e.key&&t(tt(d,0))},disabled:l}),r.createElement("button",{className:e.button,onClick:function(){return t(tt(d,0))},disabled:l},"Search")),r.createElement(ht,{tracks:a}),a.length>0&&r.createElement(ct.Z,{component:"div",className:e.pagination,rowsPerPageOptions:[20],count:c||0,rowsPerPage:20,page:i/20,onChangePage:function(e,n){return t(tt(d,20*n))}}))}));n(3261);const St=(0,Me.Z)({root:{background:Ye.Z[700],color:"white",height:"100%",width:"100%",overflow:"hidden",position:"relative",display:"flex",alignItems:"center",justifyContent:"center"},game:{maxWidth:800,height:"80%",overflow:"auto",display:"flex",flexDirection:"column",justifyContent:"center",padding:20},info:{display:"flex",alignItems:"center",justifyContent:"center",margin:5,"& *":{margin:"0px 2vw"},minHeight:25},button:{height:25,padding:5,cursor:"pointer",outline:"none",borderRadius:5,border:"0px",backgroundColor:Ye.Z[900],color:"white",textTransform:"uppercase",fontWeight:600,transition:".2s","&:hover":{backgroundColor:"white",color:Ye.Z[900]},"&:disabled":{backgroundColor:Ye.Z[500],color:Ye.Z[900],cursor:"default"}},input:{height:30,padding:3,marginBottom:5,outline:"none",borderRadius:8,border:"0px",boxShadow:"0px 0px ".concat(Ye.Z[900]),transition:"box-shadow .2s","&:focus":{border:"0px solid black",boxShadow:"3px 3px ".concat(Ye.Z[900])}},lyrics:{overflowY:"auto",paddingRight:"1vw",display:"flex",flexWrap:"wrap"},word:{margin:"3px 2px",padding:"0px 3px",fontSize:"2vh",backgroundColor:"#cacaca",borderRadius:3,userSelect:"none",color:"black"},forfeit:{color:"red"},undiscovered:{color:"transparent"},pauseOverlay:{position:"absolute",textAlign:"center",display:"flex",alignItems:"center",justifyContent:"center",fontSize:35,top:0,right:0,left:0,bottom:0,background:"rgba(0,0,0,0.8)"}});function xt(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function kt(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?xt(Object(n),!0).forEach((function(t){U()(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):xt(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var wt=Ke();const Ot=function(e){var t=St(),n=(0,o.I0)(),a=(0,o.v9)(wt),i=a.currentSong,c=a.hasForfeited,l=a.hasWon,d=a.playing,p=(0,u.UO)().id,m=(0,r.useState)({discoveredWords:[]}),g=s()(m,2),h=g[0],y=g[1],v=function(e){y(kt(kt({},h),e))};(0,r.useEffect)((function(){return n(function(e){return{type:"GET_GENIUS_SONG",id:e}}(p)),v({discoveredWords:[]}),function(){return n(_e(null))}}),[p]),(0,r.useEffect)((function(){S()&&n({type:"WIN"})}),[JSON.stringify(h.discoveredWords),i&&i.id]);var E=function(e,t){return(e=e.toLowerCase().replace(/'/g,"").latinise().trim())===(t=t.toLowerCase().replace(/'/g,"").latinise().trim())||!!(e.match(/^wh*[oah]{2,}$/)&&t.match(/^wh*[oah]{2,}$/)||e.match(/^o[oh]+$/)&&t.match(/^o[oh]+$/)||e.match(/^a[ah]+$/)&&t.match(/^a[ah]*$/)||e.match(/^h[ah]+$/)&&t.match(/^h[ah]*$/))},b=function(e){return h.discoveredWords.map((function(t){return E(t,e)})).includes(!0)},S=function(){return!!i&&JSON.stringify(h.discoveredWords)===JSON.stringify(i.lyrics)};return i?r.createElement("div",{className:t.root},r.createElement("div",{className:t.game},r.createElement("input",{className:t.input,type:"search",disabled:c||!d||l,onChange:function(e){var t=e.target.value;b(t)||i.lyrics.forEach((function(n,r){E(n,t)&&(function(e,t){var n=h.discoveredWords;n[t]=e,v({discoveredWords:n})}(n,r),e.target.value="")}))}}),r.createElement("div",{className:t.info},r.createElement("div",null,h.discoveredWords.filter((function(e){return e})).length," / ",i.lyrics.length),r.createElement("button",{className:t.button,disabled:!d||c||l,onClick:function(){return n({type:"FORFEIT"})}},"Forfeit")),r.createElement("div",{className:t.lyrics},!d&&r.createElement("div",{className:t.pauseOverlay},"Paused"),i.lyrics.map((function(e,n){return r.createElement("div",{key:n,className:(0,f.Z)(t.word,b(e)&&d?void 0:c?t.forfeit:t.undiscovered)},e)}))))):r.createElement("div",{className:t.root},"Loading...")};var Tt=(0,ce.d0)({tracks:[],trackOffset:0,totalTracks:null,playlistMeta:null,loading:!1}),Nt=function(e,t,n){return{type:"GET_PLAYLIST",id:e,offset:t,total:n}},Ct=function(e,t,n,r){return{type:"GET_PLAYLIST_SUCCESS",tracks:e,offset:t,total:n,meta:r}},Pt=Se().mark(It),At=Se().mark(jt);function It(e){var t,n,r,a,o,i,c,s;return Se().wrap((function(l){for(;;)switch(l.prev=l.next){case 0:return l.prev=0,l.next=3,(0,we.Ys)(Ae());case 3:return t=l.sent,n=t.spotifyToken,r={accessToken:n.access,id:e.id,query:e.query,offset:e.offset},l.next=8,Ne("/api/public/playlist",Ce("post",r));case 8:return a=l.sent,o=a.items,i=a.offset,c=a.total,(s=x()(a,["items","offset","total"])).type="playlist",l.next=13,(0,we.gz)(Ct(o,i,c,s));case 13:l.next=19;break;case 15:return l.prev=15,l.t0=l.catch(0),l.next=19,(0,we.gz)(Ct([]));case 19:case"end":return l.stop()}}),Pt,null,[[0,15]])}function jt(){return Se().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,we.$6)([(0,we.Fm)("GET_PLAYLIST",It)]);case 2:case"end":return e.stop()}}),At)}const _t=(0,Me.Z)({root:{background:Ye.Z[700],color:"white",height:"100%",width:"100%",overflow:"auto"},loading:{height:"100%",width:"100%",display:"flex",justifyContent:"center",alignItems:"center"},outerPlaylistHeader:{background:Ye.Z[800],display:"flex",justifyContent:"center",alignItems:"center",position:"relative",height:150,marginBottom:50},innerPlaylistHeader:{position:"absolute",bottom:"-40px",display:"flex",alignItems:"flex-end"},playlistArt:{background:Ye.Z[800],borderRadius:15,width:150,height:150,backgroundSize:"cover",border:"10px solid ".concat(Ye.Z[800]),position:"relative",transition:".3s",cursor:"pointer",overflow:"hidden","&::before":{content:'""',height:0,width:0,transform:"translate(-50%, -50%)",position:"absolute",top:"50%",left:"50%",borderTop:"25px solid transparent",borderLeft:"40px solid white",borderBottom:"25px solid transparent",transition:".2s",zIndex:1,opacity:0},"&:hover":{"&::after":{content:'""',position:"absolute",width:"100%",height:"100%",backgroundColor:"black",opacity:"0.5"},"&::before":{opacity:1}}},playlistInfo:{"& *":{whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis"},maxWidth:"25vw",marginLeft:5,marginBottom:40},playlistTitle:{fontSize:25,fontWeight:600},playlistArtists:{fontSize:20,fontWeight:400,fontStyle:"italic"}});var Rt=(0,Pe.P1)((function(e){return e.playlist}),(function(e){return e.toJS()})),Zt=ye({key:"playlist",reducer:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Tt,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"GET_PLAYLIST":return e.set("loading",!0);case"GET_PLAYLIST_SUCCESS":return e.set("tracks",t.tracks).set("trackOffset",t.offset).set("totalTracks",t.total).set("playlistMeta",t.meta).set("loading",!1);case"SEARCH_TRACKS_FAILURE":return e.set("loading",!1);default:return e}}}),Lt=ie({key:"playlist",saga:jt});const Ut=(0,l.qC)(Zt,Lt)((function(){var e=_t(),t=(0,o.I0)(),n=(0,u.UO)().id,a=(0,o.v9)(Rt),i=a.tracks,c=a.trackOffset,s=a.totalTracks,l=a.loading,f=a.playlistMeta;return console.log(f),(0,r.useEffect)((function(){t(Nt(n))}),[n]),r.createElement("div",{className:e.root},l||0===i.length?r.createElement("div",{className:e.loading},"Loading..."):r.createElement("div",null,r.createElement("div",{className:e.outerPlaylistHeader},r.createElement("div",{className:e.innerPlaylistHeader},r.createElement("div",{className:e.playlistArt,style:{backgroundImage:"url(".concat(f.images&&f.images[0].url,")")},onClick:function(){return t(function(e,t){return{type:"SET_SOURCE_PLAYLIST",id:e,meta:t}}(n,f))}}),r.createElement("div",{className:e.playlistInfo},r.createElement("div",{className:e.playlistTitle},f.name),f.owner&&r.createElement("div",{className:e.playlistArtists},f.owner)))),r.createElement(ht,{tracks:i}),r.createElement(ct.Z,{component:"div",className:e.pagination,rowsPerPageOptions:[20],count:s||0,rowsPerPage:20,page:c/20,onChangePage:function(e,r){return t(Nt(n,20*r))}})))}));var Gt=(0,ce.d0)({tracks:[],trackOffset:0,totalTracks:null,albumMeta:null,loading:!1}),zt=function(e,t){return{type:"GET_ALBUM",id:e,offset:t}},Dt=function(e,t,n,r){return{type:"GET_ALBUM_SUCCESS",tracks:e,offset:t,total:n,meta:r}},Wt=Se().mark(Ft),Bt=Se().mark(Yt);function Ft(e){var t,n,r,a,o,i,c,s;return Se().wrap((function(l){for(;;)switch(l.prev=l.next){case 0:return l.prev=0,l.next=3,(0,we.Ys)(Ae());case 3:return t=l.sent,n=t.spotifyToken,r={accessToken:n.access,id:e.id,offset:e.offset},l.next=8,Ne("/api/public/album",Ce("post",r));case 8:return a=l.sent,o=a.items,i=a.offset,c=a.total,(s=x()(a,["items","offset","total"])).type="album",l.next=13,(0,we.gz)(Dt(o,i,c,s));case 13:l.next=19;break;case 15:return l.prev=15,l.t0=l.catch(0),l.next=19,(0,we.gz)(Dt([]));case 19:case"end":return l.stop()}}),Wt,null,[[0,15]])}function Yt(){return Se().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,we.$6)([(0,we.Fm)("GET_ALBUM",Ft)]);case 2:case"end":return e.stop()}}),Bt)}const Mt=(0,Me.Z)({root:{background:Ye.Z[700],color:"white",height:"100%",width:"100%",overflow:"auto"},loading:{height:"100%",width:"100%",display:"flex",justifyContent:"center",alignItems:"center"},outerAlbumHeader:{background:Ye.Z[800],display:"flex",justifyContent:"center",alignItems:"center",position:"relative",height:150,marginBottom:50},innerAlbumHeader:{position:"absolute",bottom:"-40px",display:"flex",alignItems:"flex-end"},albumArt:{background:Ye.Z[800],borderRadius:15,width:150,height:150,backgroundSize:"cover",border:"10px solid ".concat(Ye.Z[800]),position:"relative",transition:".3s",cursor:"pointer",overflow:"hidden","&::before":{content:'""',height:0,width:0,transform:"translate(-50%, -50%)",position:"absolute",top:"50%",left:"50%",borderTop:"25px solid transparent",borderLeft:"40px solid white",borderBottom:"25px solid transparent",transition:".2s",zIndex:1,opacity:0},"&:hover":{"&::after":{content:'""',position:"absolute",width:"100%",height:"100%",backgroundColor:"black",opacity:"0.5"},"&::before":{opacity:1}}},albumInfo:{"& *":{whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis"},maxWidth:"25vw",marginLeft:5,marginBottom:40},albumTitle:{fontSize:25,fontWeight:600},albumArtists:{fontSize:20,fontWeight:400,fontStyle:"italic"}});var Ht=(0,Pe.P1)((function(e){return e.album}),(function(e){return e.toJS()})),Kt=ye({key:"album",reducer:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Gt,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"GET_ALBUM":return e.set("loading",!0);case"GET_ALBUM_SUCCESS":return e.set("tracks",t.tracks).set("trackOffset",t.offset).set("totalTracks",t.total).set("albumMeta",t.meta).set("loading",!1);case"SEARCH_TRACKS_FAILURE":return e.set("loading",!1);default:return e}}}),Jt=ie({key:"album",saga:Yt});const qt=(0,l.qC)(Kt,Jt)((function(){var e=Mt(),t=(0,o.I0)(),n=(0,u.UO)().id,a=(0,o.v9)(Ht),i=a.tracks,c=a.trackOffset,s=a.totalTracks,l=a.loading,f=a.albumMeta;return(0,r.useEffect)((function(){t(zt(n))}),[n]),r.createElement("div",{className:e.root},l||0===i.length?r.createElement("div",{className:e.loading},"Loading..."):r.createElement("div",null,r.createElement("div",{className:e.outerAlbumHeader},r.createElement("div",{className:e.innerAlbumHeader},r.createElement("div",{className:e.albumArt,style:{backgroundImage:"url(".concat(f.images[1].url,")")},onClick:function(){return t(function(e,t){return{type:"SET_SOURCE_ALBUM",id:e,meta:t}}(n,f))}}),r.createElement("div",{className:e.albumInfo},r.createElement("div",{className:e.albumTitle},f.name),r.createElement("div",{className:e.albumArtists},f.artists.map((function(e){return e.name})).join(", "))))),r.createElement(ht,{tracks:i}),r.createElement(ct.Z,{component:"div",className:e.pagination,rowsPerPageOptions:[20],count:s||0,rowsPerPage:20,page:c/20,onChangePage:function(e,r){return t(zt(n,20*r))}})))}));var $t=n(8884),Vt=n(366);const Xt=(0,Me.Z)({root:{flexShrink:0,position:"relative",background:Ye.Z[800],height:"100%",width:50,transition:".3s","&$sidebarOpen":{width:300},overflowY:"hidden"},toggleButton:{position:"absolute",top:10,right:10,width:30,height:30,zIndex:1},navButton:{"& svg":{marginRight:10},display:"flex",justifyContent:"left",alignItems:"center",textTransform:"none !important",fontWeight:"500 !important",fontSize:"16px !important",borderBottom:"1px solid white",borderRadius:"0px !important","&:last-child":{borderBottom:"0px !important"}},content:{padding:10,paddingTop:40,color:"white",zIndex:1,height:"100%",width:300,transition:".3s",transform:"translateX(-300px)","&$sidebarOpen":{transform:"translateX(0px) !important"},display:"flex",flexDirection:"column","& > *":{minHeight:"100px",overflow:"hidden"}},sidebar:{height:"100%"},sidebarOpen:{}});var Qt=n(9969),en=n(8995),tn=n(2448),nn=n(7154),rn=n.n(nn),an=n(282),on=function(e){var t=e.history,n=(e.location,e.match,e.staticContext,e.to),a=e.onClick,o=x()(e,["history","location","match","staticContext","to","onClick"]);return r.createElement(an.Z,rn()({},o,{onClick:function(e){a&&a(e),t.push(n)}}))};on.propTypes={to:lt().string.isRequired,children:lt().node.isRequired};const cn=(0,u.EN)(on),sn=(0,Me.Z)({root:{flexShrink:0},navButton:{"& svg":{marginRight:10},display:"flex",justifyContent:"left",alignItems:"center",textTransform:"none !important",fontWeight:"500 !important",fontSize:"16px !important",borderBottom:"1px solid white",borderRadius:"0px !important","&:last-child":{borderBottom:"0px !important"}}}),ln=function(){var e=sn();return r.createElement("div",{className:e.root},r.createElement(cn,{fullWidth:!0,className:e.navButton,to:"/"},r.createElement(tn.Z,null)," Home"),r.createElement(cn,{fullWidth:!0,className:e.navButton,to:"/search"},r.createElement(en.Z,null)," Search"),r.createElement(cn,{fullWidth:!0,className:e.navButton,to:"/settings"},r.createElement(Qt.Z,null)," Settings"))},un=(0,Me.Z)({root:{flexShrink:1,display:"flex",flexDirection:"column",maxHeight:300},placeholder:{position:"absolute",top:0,width:50,background:Ye.Z[800]},playlistsList:{color:"white",backgroundColor:"rgba(0,0,0,0.3)",overflow:"auto",fontSize:12},header:{color:"white",fontSize:16,textAlign:"center",padding:"10px 0px"},playlist:{whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis",padding:"5px 10px",cursor:"pointer","&:hover":{backgroundColor:"rgba(0,0,0,0.4)"}},pagination:{flexShrink:0}});var fn=(0,ce.d0)({spotifyPlaylists:null,spotifyPlaylistsOffset:0,totalSpotifyPlaylists:null});var dn=function(e){return{type:"GET_SPOTIFY_PLAYLISTS",offset:e}},pn=Se().mark(gn),mn=Se().mark(hn);function gn(e){var t,n,r,a;return Se().wrap((function(o){for(;;)switch(o.prev=o.next){case 0:return o.next=2,(0,we.Ys)(Ae());case 2:return t=o.sent,n=t.spotifyToken,o.prev=4,r={accessToken:n.access,offset:e.offset},o.next=8,Ne("/api/public/playlists",Ce("post",r));case 8:return a=o.sent,o.next=11,(0,we.gz)({type:"GET_SPOTIFY_PLAYLISTS_SUCCESS",playlists:a.items,offset:a.offset,total:a.total});case 11:o.next=15;break;case 13:o.prev=13,o.t0=o.catch(4);case 15:case"end":return o.stop()}}),pn,null,[[4,13]])}function hn(){return Se().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,we.$6)([(0,we.Fm)("GET_SPOTIFY_PLAYLISTS",gn)]);case 2:case"end":return e.stop()}}),mn)}var yn=ye({key:"spotifyPlaylists",reducer:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:fn,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"GET_SPOTIFY_PLAYLISTS":return e.set("spotifyPlaylists",null);case"GET_SPOTIFY_PLAYLISTS_SUCCESS":return e.set("spotifyPlaylists",t.playlists).set("spotifyPlaylistsOffset",t.offset).set("totalSpotifyPlaylists",t.total);default:return e}}}),vn=ie({key:"spotifyPlaylists",saga:hn});const En=(0,l.qC)(yn,vn)((function(){var e=un(),t=(0,o.I0)(),n=(0,u.k6)(),a=(0,o.v9)(Ae()).spotifyToken,i=(0,o.v9)((0,Pe.P1)((function(e){return e.spotifyPlaylists||fn}),(function(e){return e.toJS()}))),c=i.spotifyPlaylists,s=i.spotifyPlaylistsOffset,l=i.totalSpotifyPlaylists;return(0,r.useEffect)((function(){t(dn())}),[JSON.stringify(a)]),a?r.createElement("div",{className:e.root},r.createElement("div",{className:e.header},"My Spotify Playlists"),r.createElement("div",{className:e.playlistsList},c&&c.map((function(t){return r.createElement("div",{className:e.playlist,key:t.id,onClick:function(){return n.push("/playlist/".concat(t.id))}},t.name)}))),r.createElement(ct.Z,{component:"div",className:e.pagination,rowsPerPageOptions:[20],count:l||0,rowsPerPage:20,page:s/20,onChangePage:function(e,n){return t(dn(20*n))}})):null})),bn=(0,Me.Z)((function(e){return{root:{flexShrink:1,display:"flex",flexDirection:"column",maxHeight:300},playlist:{flexShrink:1,color:"white",backgroundColor:"rgba(0,0,0,0.3)",overflow:"auto"},header:{flexShrink:0,color:"white",fontSize:16,padding:"10px 0px",display:"flex",justifyContent:"center",alignItems:"center","& div":{marginRight:10}},song:{flexShrink:1,padding:"3px 0px",display:"flex",fontSize:12},songBlock:{display:"flex",alignItems:"center",cursor:"grab",padding:5,justifyContent:"space-between","& *":{flex:"0 1 1",minWidth:0},"&:hover":{backgroundColor:"rgba(0,0,0,0.4)"}},dragHandle:{marginRight:5,alignSelf:"center",flexShrink:0},albumCover:{marginRight:5,height:45,width:45,flexShrink:0},trackInfo:{flexShrink:1,minWidth:40,"& *":{whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis"}},trackTitle:{fontWeight:600},trackAlbum:{fontStyle:"italic"},trackArtists:{fontStyle:"italic"}}}));var Sn=function(e){var t=localStorage.getItem("customPlaylist");try{return JSON.parse(t)}catch(e){return t}}();Array.isArray(Sn)||(Sn=[]);var xn=(0,ce.d0)({customPlaylist:Sn});const kn=function(){return(0,Pe.P1)((function(e){return e.customPlaylist||xn}),(function(e){return e.toJS()}))};var wn=(0,pt.Z)({root:{height:30,width:30,marginLeft:2},icon:{}});const On=function(){var e=(0,o.I0)(),t=wn(),n=(0,o.v9)(kn()).customPlaylist;return r.createElement(b.Z,{onClick:function(){return e(je(n))},className:t.root},r.createElement(E.Z,{className:t.icon}))};var Tn=n(3990),Nn=(0,pt.Z)({root:{height:30,width:30,marginLeft:2,padding:5},icon:{height:14,width:14},hidden:{display:"none"}});const Cn=function(){var e=(0,r.useRef)(),t=(0,o.I0)(),n=Nn();return r.createElement(r.Fragment,null,r.createElement(b.Z,{onClick:function(){return e.current.click()},className:n.root},r.createElement(Tn.ac7,{className:n.icon})),r.createElement("input",{className:n.hidden,type:"file",ref:e,onChange:function(e){var n=new FileReader;n.onload=function(e){var n=e.target.result,r=JSON.parse(n);t(dt(r.contents))}.bind(void 0),n.readAsText(e.target.files[0])}}))};var Pn=n(861),An=(0,pt.Z)({root:{height:30,width:30,marginLeft:2,padding:5},icon:{height:19,width:19}});const In=function(){var e=(0,o.v9)(kn()),t=e.customPlaylist,n=e.name,a=An();return r.createElement(b.Z,{onClick:function(){var e=JSON.stringify({contents:t,name:n}),r="playlistName".toLowerCase().replace(/ /g,"_")+".json",a="application/json;charset=utf-8;";if(window.navigator&&window.navigator.msSaveOrOpenBlob){var o=new Blob([decodeURIComponent(encodeURI(e))],{type:a});navigator.msSaveOrOpenBlob(o,r)}else{var i=document.createElement("a");i.download=r,i.href="data:"+a+","+encodeURIComponent(e),i.target="_blank",document.body.appendChild(i),i.click(),document.body.removeChild(i)}},className:a.root},r.createElement(Pn.Z,{className:a.icon}))};var jn=n(5996),_n=(0,pt.Z)({root:{height:30,width:30,marginLeft:2},icon:{}});const Rn=function(){var e=(0,o.I0)(),t=_n();return r.createElement(b.Z,{onClick:function(){return e(dt([]))},className:t.root},r.createElement(jn.Z,{className:t.icon}))};var Zn=kn();const Ln=ye({key:"customPlaylist",reducer:function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:xn,n=arguments.length>1?arguments[1]:void 0;switch(n.type){case"ADD_SONG":if(!n.song||!n.song.id)return t;e=t.set("customPlaylist",[].concat(m()(t.get("customPlaylist")),[n.song]));break;case"DELETE_SONG":e=t.set("customPlaylist",t.get("customPlaylist").filter((function(e){return e.id!==n.song.id})));break;case"SET_PLAYLIST":if(!n.playlist||!n.playlist)return t;e=t.set("customPlaylist",n.playlist);break;default:return t}return le("customPlaylist",e.get("customPlaylist")),e}})((function(){(0,o.I0)();var e=bn(),t=(0,o.v9)(Zn).customPlaylist;return r.createElement("div",{className:e.root},r.createElement("div",{className:e.header},r.createElement("div",null,"Custom Playlist"),r.createElement(Cn,null),r.createElement(In,null),t.length>0&&r.createElement(On,null),t.length>0&&r.createElement(Rn,null)),r.createElement("div",{className:e.playlist},t.length>0?r.createElement(ht,{tracks:t,customPlaylist:!0}):r.createElement("div",{style:{padding:"30px 10px",fontSize:14,textAlign:"center"}},"Playlist is empty! Search for your favorite music or add songs from your Spotify playlists.")))})),Un=function(e){var t=e.open,n=e.toggleOpen,a=Xt();return r.createElement("div",{className:(0,f.Z)(a.root,t&&a.sidebarOpen)},r.createElement("div",{className:(0,f.Z)(a.sidebar,t&&a.sidebarOpen)},r.createElement(b.Z,{className:a.toggleButton,onClick:n},t?r.createElement(Vt.Z,null):r.createElement($t.Z,null)),r.createElement("div",{className:(0,f.Z)(a.content,t&&a.sidebarOpen)},r.createElement(ln,null),r.createElement(En,null),r.createElement(Ln,null))))};var Gn=function(e){return{type:"SET_SPOTIFY_TOKEN",token:e}},zn=n(9583);const Dn=(0,Me.Z)({root:{background:Ye.Z[700],color:"white",height:"100%",width:"100%",padding:10},header:{fontSize:22,fontWeight:500,marginBottom:10,paddingBottom:10,borderBottom:"1px solid white"}});var Wn=Se().mark(Yn),Bn=Se().mark(Mn),Fn=Se().mark(Hn);function Yn(){var e;return Se().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,Ne("/api/public/authorize",Ce("get"));case 3:e=t.sent,window.location.href=e,(0,we.gz)(dn()),t.next=11;break;case 8:t.prev=8,t.t0=t.catch(0),alert("Unable to authenticate with spotify");case 11:case"end":return t.stop()}}),Wn,null,[[0,8]])}function Mn(e){var t,n;return Se().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,t={code:e.code},r.next=4,Ne("/api/public/get-access-token",Ce("post",t));case 4:return n=r.sent,r.next=7,(0,we.gz)(Gn({access:n.accessToken,refresh:n.refreshToken}));case 7:r.next=11;break;case 9:r.prev=9,r.t0=r.catch(0);case 11:case"end":return r.stop()}}),Bn,null,[[0,9]])}function Hn(){return Se().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,we.$6)([(0,we.Fm)("AUTHORIZE_SPOTIFY",Yn),(0,we.Fm)("GET_SPOTIFY_TOKEN",Mn)]);case 2:case"end":return e.stop()}}),Fn)}const Kn=ie({key:"settings",saga:Hn})((function(e){var t=Dn(),n=(0,o.v9)(Ae()),a=(n.theme,n.seed,n.playOnLoad,n.spotifyToken),i=(0,o.I0)();return(0,r.useEffect)((function(){var t=new URLSearchParams(e.location.search);!a&&t.has("code")&&i({type:"GET_SPOTIFY_TOKEN",code:t.get("code")})})),r.createElement("div",{className:t.root},r.createElement("div",{className:t.header},"Settings"),r.createElement("div",null,"Spotify Integration"),a?r.createElement(an.Z,{onClick:function(){return i(Gn(null))}},"Disconnect My Spotify ",r.createElement(zn.l4C,null)):r.createElement("div",null,r.createElement(an.Z,{onClick:function(){return i({type:"AUTHORIZE_SPOTIFY"})}},"Connect My Spotify ",r.createElement(zn.l4C,null)),r.createElement("div",null,"Connecting Versed with your Spotify account will allow you to sync your playlists between applications.")))})),Jn=(0,n(8548).Z)({palette:{type:"dark"}}),qn=(0,Me.Z)((function(e){return{root:{height:"100vh",display:"flex",flexDirection:"column"},body:{height:"calc(100% - 75px)",display:"flex"},sidebarOpen:{},content:{overflow:"auto",width:"calc(100% - 50px) !important","&$sidebarOpen":{width:"calc(100% - 300px)"}},placeholder:{height:"100%",width:50,background:Ye.Z[800]}}}));var $n=Se().mark(Xn),Vn=Se().mark(Qn);function Xn(){var e,t,n,r;return Se().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,a.next=3,(0,we.Ys)(Ae());case 3:if(e=a.sent,t=e.spotifyToken){a.next=7;break}return a.abrupt("return");case 7:return n={refreshToken:t.refresh},a.next=10,Ne("/api/public/refresh-access-token",Ce("post",n));case 10:return r=a.sent,a.next=13,(0,we.gz)(Gn({access:r,refresh:t.refresh}));case 13:a.next=17;break;case 15:a.prev=15,a.t0=a.catch(0);case 17:case"end":return a.stop()}}),$n,null,[[0,15]])}function Qn(){return Se().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,we.$6)([(0,we.Fm)("REFRESH_SPOTIFY_TOKEN",Xn)]);case 2:case"end":return e.stop()}}),Vn)}var er=ye({key:"app",reducer:de}),tr=ie({key:"app",saga:Qn});const nr=(0,l.qC)(er,tr)((function(){var e=(0,o.I0)();(0,r.useEffect)((function(){e({type:"REFRESH_SPOTIFY_TOKEN"}),setInterval((function(){e({type:"REFRESH_SPOTIFY_TOKEN"})}),36e5)}),[]);var t=(0,r.useState)(!0),n=s()(t,2),a=n[0],i=n[1],c=qn();return r.createElement(d.Z,{theme:Jn},r.createElement("div",{className:c.root},r.createElement("div",{className:c.body},r.createElement(Un,{open:a,toggleOpen:function(){return i(!a)}}),r.createElement("div",{className:(0,f.Z)(c.content,a&&c.sidebarOpen)},r.createElement(u.rs,null,r.createElement(u.AW,{exact:!0,path:"/",render:function(e){return r.createElement(Qe,e)}}),r.createElement(u.AW,{path:"/search",render:function(e){return r.createElement(bt,e)}}),r.createElement(u.AW,{path:"/settings",render:function(e){return r.createElement(Kn,e)}}),r.createElement(u.AW,{path:"/songs/:id",render:function(e){return r.createElement(Ot,e)}}),r.createElement(u.AW,{path:"/playlist/:id",render:function(e){return r.createElement(Ut,e)}}),r.createElement(u.AW,{path:"/album/:id",render:function(e){return r.createElement(qt,e)}})))),r.createElement(Ve,null)))}));var rr=n(797),ar=n(8500),or=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=(0,rr.ZP)(),n=(0,l.MT)(ge(),e,(0,ar.Uo)((0,l.md)(t)));return n.runSaga=t.run,n.injectedReducers={},n.injectedSagas={},n}({});a.render(r.createElement(o.zt,{store:or},r.createElement(i.VK,null,r.createElement(nr,null))),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()}))},3261:()=>{var e={Á:"A",Ă:"A",Ắ:"A",Ặ:"A",Ằ:"A",Ẳ:"A",Ẵ:"A",Ǎ:"A",Â:"A",Ấ:"A",Ậ:"A",Ầ:"A",Ẩ:"A",Ẫ:"A",Ä:"A",Ǟ:"A",Ȧ:"A",Ǡ:"A",Ạ:"A",Ȁ:"A",À:"A",Ả:"A",Ȃ:"A",Ā:"A",Ą:"A",Å:"A",Ǻ:"A",Ḁ:"A",Ⱥ:"A",Ã:"A",Ꜳ:"AA",Æ:"AE",Ǽ:"AE",Ǣ:"AE",Ꜵ:"AO",Ꜷ:"AU",Ꜹ:"AV",Ꜻ:"AV",Ꜽ:"AY",Ḃ:"B",Ḅ:"B",Ɓ:"B",Ḇ:"B",Ƀ:"B",Ƃ:"B",Ć:"C",Č:"C",Ç:"C",Ḉ:"C",Ĉ:"C",Ċ:"C",Ƈ:"C",Ȼ:"C",Ď:"D",Ḑ:"D",Ḓ:"D",Ḋ:"D",Ḍ:"D",Ɗ:"D",Ḏ:"D",ǲ:"D",ǅ:"D",Đ:"D",Ƌ:"D",Ǳ:"DZ",Ǆ:"DZ",É:"E",Ĕ:"E",Ě:"E",Ȩ:"E",Ḝ:"E",Ê:"E",Ế:"E",Ệ:"E",Ề:"E",Ể:"E",Ễ:"E",Ḙ:"E",Ë:"E",Ė:"E",Ẹ:"E",Ȅ:"E",È:"E",Ẻ:"E",Ȇ:"E",Ē:"E",Ḗ:"E",Ḕ:"E",Ę:"E",Ɇ:"E",Ẽ:"E",Ḛ:"E",Ꝫ:"ET",Ḟ:"F",Ƒ:"F",Ǵ:"G",Ğ:"G",Ǧ:"G",Ģ:"G",Ĝ:"G",Ġ:"G",Ɠ:"G",Ḡ:"G",Ǥ:"G",Ḫ:"H",Ȟ:"H",Ḩ:"H",Ĥ:"H",Ⱨ:"H",Ḧ:"H",Ḣ:"H",Ḥ:"H",Ħ:"H",Í:"I",Ĭ:"I",Ǐ:"I",Î:"I",Ï:"I",Ḯ:"I",İ:"I",Ị:"I",Ȉ:"I",Ì:"I",Ỉ:"I",Ȋ:"I",Ī:"I",Į:"I",Ɨ:"I",Ĩ:"I",Ḭ:"I",Ꝺ:"D",Ꝼ:"F",Ᵹ:"G",Ꞃ:"R",Ꞅ:"S",Ꞇ:"T",Ꝭ:"IS",Ĵ:"J",Ɉ:"J",Ḱ:"K",Ǩ:"K",Ķ:"K",Ⱪ:"K",Ꝃ:"K",Ḳ:"K",Ƙ:"K",Ḵ:"K",Ꝁ:"K",Ꝅ:"K",Ĺ:"L",Ƚ:"L",Ľ:"L",Ļ:"L",Ḽ:"L",Ḷ:"L",Ḹ:"L",Ⱡ:"L",Ꝉ:"L",Ḻ:"L",Ŀ:"L",Ɫ:"L",ǈ:"L",Ł:"L",Ǉ:"LJ",Ḿ:"M",Ṁ:"M",Ṃ:"M",Ɱ:"M",Ń:"N",Ň:"N",Ņ:"N",Ṋ:"N",Ṅ:"N",Ṇ:"N",Ǹ:"N",Ɲ:"N",Ṉ:"N",Ƞ:"N",ǋ:"N",Ñ:"N",Ǌ:"NJ",Ó:"O",Ŏ:"O",Ǒ:"O",Ô:"O",Ố:"O",Ộ:"O",Ồ:"O",Ổ:"O",Ỗ:"O",Ö:"O",Ȫ:"O",Ȯ:"O",Ȱ:"O",Ọ:"O",Ő:"O",Ȍ:"O",Ò:"O",Ỏ:"O",Ơ:"O",Ớ:"O",Ợ:"O",Ờ:"O",Ở:"O",Ỡ:"O",Ȏ:"O",Ꝋ:"O",Ꝍ:"O",Ō:"O",Ṓ:"O",Ṑ:"O",Ɵ:"O",Ǫ:"O",Ǭ:"O",Ø:"O",Ǿ:"O",Õ:"O",Ṍ:"O",Ṏ:"O",Ȭ:"O",Ƣ:"OI",Ꝏ:"OO",Ɛ:"E",Ɔ:"O",Ȣ:"OU",Ṕ:"P",Ṗ:"P",Ꝓ:"P",Ƥ:"P",Ꝕ:"P",Ᵽ:"P",Ꝑ:"P",Ꝙ:"Q",Ꝗ:"Q",Ŕ:"R",Ř:"R",Ŗ:"R",Ṙ:"R",Ṛ:"R",Ṝ:"R",Ȑ:"R",Ȓ:"R",Ṟ:"R",Ɍ:"R",Ɽ:"R",Ꜿ:"C",Ǝ:"E",Ś:"S",Ṥ:"S",Š:"S",Ṧ:"S",Ş:"S",Ŝ:"S",Ș:"S",Ṡ:"S",Ṣ:"S",Ṩ:"S",ẞ:"SS",Ť:"T",Ţ:"T",Ṱ:"T",Ț:"T",Ⱦ:"T",Ṫ:"T",Ṭ:"T",Ƭ:"T",Ṯ:"T",Ʈ:"T",Ŧ:"T",Ɐ:"A",Ꞁ:"L",Ɯ:"M",Ʌ:"V",Ꜩ:"TZ",Ú:"U",Ŭ:"U",Ǔ:"U",Û:"U",Ṷ:"U",Ü:"U",Ǘ:"U",Ǚ:"U",Ǜ:"U",Ǖ:"U",Ṳ:"U",Ụ:"U",Ű:"U",Ȕ:"U",Ù:"U",Ủ:"U",Ư:"U",Ứ:"U",Ự:"U",Ừ:"U",Ử:"U",Ữ:"U",Ȗ:"U",Ū:"U",Ṻ:"U",Ų:"U",Ů:"U",Ũ:"U",Ṹ:"U",Ṵ:"U",Ꝟ:"V",Ṿ:"V",Ʋ:"V",Ṽ:"V",Ꝡ:"VY",Ẃ:"W",Ŵ:"W",Ẅ:"W",Ẇ:"W",Ẉ:"W",Ẁ:"W",Ⱳ:"W",Ẍ:"X",Ẋ:"X",Ý:"Y",Ŷ:"Y",Ÿ:"Y",Ẏ:"Y",Ỵ:"Y",Ỳ:"Y",Ƴ:"Y",Ỷ:"Y",Ỿ:"Y",Ȳ:"Y",Ɏ:"Y",Ỹ:"Y",Ź:"Z",Ž:"Z",Ẑ:"Z",Ⱬ:"Z",Ż:"Z",Ẓ:"Z",Ȥ:"Z",Ẕ:"Z",Ƶ:"Z",Ĳ:"IJ",Œ:"OE",ᴀ:"A",ᴁ:"AE",ʙ:"B",ᴃ:"B",ᴄ:"C",ᴅ:"D",ᴇ:"E",ꜰ:"F",ɢ:"G",ʛ:"G",ʜ:"H",ɪ:"I",ʁ:"R",ᴊ:"J",ᴋ:"K",ʟ:"L",ᴌ:"L",ᴍ:"M",ɴ:"N",ᴏ:"O",ɶ:"OE",ᴐ:"O",ᴕ:"OU",ᴘ:"P",ʀ:"R",ᴎ:"N",ᴙ:"R",ꜱ:"S",ᴛ:"T",ⱻ:"E",ᴚ:"R",ᴜ:"U",ᴠ:"V",ᴡ:"W",ʏ:"Y",ᴢ:"Z",á:"a",ă:"a",ắ:"a",ặ:"a",ằ:"a",ẳ:"a",ẵ:"a",ǎ:"a",â:"a",ấ:"a",ậ:"a",ầ:"a",ẩ:"a",ẫ:"a",ä:"a",ǟ:"a",ȧ:"a",ǡ:"a",ạ:"a",ȁ:"a",à:"a",ả:"a",ȃ:"a",ā:"a",ą:"a",ᶏ:"a",ẚ:"a",å:"a",ǻ:"a",ḁ:"a",ⱥ:"a",ã:"a",ꜳ:"aa",æ:"ae",ǽ:"ae",ǣ:"ae",ꜵ:"ao",ꜷ:"au",ꜹ:"av",ꜻ:"av",ꜽ:"ay",ḃ:"b",ḅ:"b",ɓ:"b",ḇ:"b",ᵬ:"b",ᶀ:"b",ƀ:"b",ƃ:"b",ɵ:"o",ć:"c",č:"c",ç:"c",ḉ:"c",ĉ:"c",ɕ:"c",ċ:"c",ƈ:"c",ȼ:"c",ď:"d",ḑ:"d",ḓ:"d",ȡ:"d",ḋ:"d",ḍ:"d",ɗ:"d",ᶑ:"d",ḏ:"d",ᵭ:"d",ᶁ:"d",đ:"d",ɖ:"d",ƌ:"d",ı:"i",ȷ:"j",ɟ:"j",ʄ:"j",ǳ:"dz",ǆ:"dz",é:"e",ĕ:"e",ě:"e",ȩ:"e",ḝ:"e",ê:"e",ế:"e",ệ:"e",ề:"e",ể:"e",ễ:"e",ḙ:"e",ë:"e",ė:"e",ẹ:"e",ȅ:"e",è:"e",ẻ:"e",ȇ:"e",ē:"e",ḗ:"e",ḕ:"e",ⱸ:"e",ę:"e",ᶒ:"e",ɇ:"e",ẽ:"e",ḛ:"e",ꝫ:"et",ḟ:"f",ƒ:"f",ᵮ:"f",ᶂ:"f",ǵ:"g",ğ:"g",ǧ:"g",ģ:"g",ĝ:"g",ġ:"g",ɠ:"g",ḡ:"g",ᶃ:"g",ǥ:"g",ḫ:"h",ȟ:"h",ḩ:"h",ĥ:"h",ⱨ:"h",ḧ:"h",ḣ:"h",ḥ:"h",ɦ:"h",ẖ:"h",ħ:"h",ƕ:"hv",í:"i",ĭ:"i",ǐ:"i",î:"i",ï:"i",ḯ:"i",ị:"i",ȉ:"i",ì:"i",ỉ:"i",ȋ:"i",ī:"i",į:"i",ᶖ:"i",ɨ:"i",ĩ:"i",ḭ:"i",ꝺ:"d",ꝼ:"f",ᵹ:"g",ꞃ:"r",ꞅ:"s",ꞇ:"t",ꝭ:"is",ǰ:"j",ĵ:"j",ʝ:"j",ɉ:"j",ḱ:"k",ǩ:"k",ķ:"k",ⱪ:"k",ꝃ:"k",ḳ:"k",ƙ:"k",ḵ:"k",ᶄ:"k",ꝁ:"k",ꝅ:"k",ĺ:"l",ƚ:"l",ɬ:"l",ľ:"l",ļ:"l",ḽ:"l",ȴ:"l",ḷ:"l",ḹ:"l",ⱡ:"l",ꝉ:"l",ḻ:"l",ŀ:"l",ɫ:"l",ᶅ:"l",ɭ:"l",ł:"l",ǉ:"lj",ſ:"s",ẜ:"s",ẛ:"s",ẝ:"s",ḿ:"m",ṁ:"m",ṃ:"m",ɱ:"m",ᵯ:"m",ᶆ:"m",ń:"n",ň:"n",ņ:"n",ṋ:"n",ȵ:"n",ṅ:"n",ṇ:"n",ǹ:"n",ɲ:"n",ṉ:"n",ƞ:"n",ᵰ:"n",ᶇ:"n",ɳ:"n",ñ:"n",ǌ:"nj",ó:"o",ŏ:"o",ǒ:"o",ô:"o",ố:"o",ộ:"o",ồ:"o",ổ:"o",ỗ:"o",ö:"o",ȫ:"o",ȯ:"o",ȱ:"o",ọ:"o",ő:"o",ȍ:"o",ò:"o",ỏ:"o",ơ:"o",ớ:"o",ợ:"o",ờ:"o",ở:"o",ỡ:"o",ȏ:"o",ꝋ:"o",ꝍ:"o",ⱺ:"o",ō:"o",ṓ:"o",ṑ:"o",ǫ:"o",ǭ:"o",ø:"o",ǿ:"o",õ:"o",ṍ:"o",ṏ:"o",ȭ:"o",ƣ:"oi",ꝏ:"oo",ɛ:"e",ᶓ:"e",ɔ:"o",ᶗ:"o",ȣ:"ou",ṕ:"p",ṗ:"p",ꝓ:"p",ƥ:"p",ᵱ:"p",ᶈ:"p",ꝕ:"p",ᵽ:"p",ꝑ:"p",ꝙ:"q",ʠ:"q",ɋ:"q",ꝗ:"q",ŕ:"r",ř:"r",ŗ:"r",ṙ:"r",ṛ:"r",ṝ:"r",ȑ:"r",ɾ:"r",ᵳ:"r",ȓ:"r",ṟ:"r",ɼ:"r",ᵲ:"r",ᶉ:"r",ɍ:"r",ɽ:"r",ↄ:"c",ꜿ:"c",ɘ:"e",ɿ:"r",ś:"s",ṥ:"s",š:"s",ṧ:"s",ş:"s",ŝ:"s",ș:"s",ṡ:"s",ṣ:"s",ṩ:"s",ʂ:"s",ᵴ:"s",ᶊ:"s",ȿ:"s",ß:"ss",ɡ:"g",ᴑ:"o",ᴓ:"o",ᴝ:"u",ť:"t",ţ:"t",ṱ:"t",ț:"t",ȶ:"t",ẗ:"t",ⱦ:"t",ṫ:"t",ṭ:"t",ƭ:"t",ṯ:"t",ᵵ:"t",ƫ:"t",ʈ:"t",ŧ:"t",ᵺ:"th",ɐ:"a",ᴂ:"ae",ǝ:"e",ᵷ:"g",ɥ:"h",ʮ:"h",ʯ:"h",ᴉ:"i",ʞ:"k",ꞁ:"l",ɯ:"m",ɰ:"m",ᴔ:"oe",ɹ:"r",ɻ:"r",ɺ:"r",ⱹ:"r",ʇ:"t",ʌ:"v",ʍ:"w",ʎ:"y",ꜩ:"tz",ú:"u",ŭ:"u",ǔ:"u",û:"u",ṷ:"u",ü:"u",ǘ:"u",ǚ:"u",ǜ:"u",ǖ:"u",ṳ:"u",ụ:"u",ű:"u",ȕ:"u",ù:"u",ủ:"u",ư:"u",ứ:"u",ự:"u",ừ:"u",ử:"u",ữ:"u",ȗ:"u",ū:"u",ṻ:"u",ų:"u",ᶙ:"u",ů:"u",ũ:"u",ṹ:"u",ṵ:"u",ᵫ:"ue",ꝸ:"um",ⱴ:"v",ꝟ:"v",ṿ:"v",ʋ:"v",ᶌ:"v",ⱱ:"v",ṽ:"v",ꝡ:"vy",ẃ:"w",ŵ:"w",ẅ:"w",ẇ:"w",ẉ:"w",ẁ:"w",ⱳ:"w",ẘ:"w",ẍ:"x",ẋ:"x",ᶍ:"x",ý:"y",ŷ:"y",ÿ:"y",ẏ:"y",ỵ:"y",ỳ:"y",ƴ:"y",ỷ:"y",ỿ:"y",ȳ:"y",ẙ:"y",ɏ:"y",ỹ:"y",ź:"z",ž:"z",ẑ:"z",ʑ:"z",ⱬ:"z",ż:"z",ẓ:"z",ȥ:"z",ẕ:"z",ᵶ:"z",ᶎ:"z",ʐ:"z",ƶ:"z",ɀ:"z",ﬀ:"ff",ﬃ:"ffi",ﬄ:"ffl",ﬁ:"fi",ﬂ:"fl",ĳ:"ij",œ:"oe",ﬆ:"st",ₐ:"a",ₑ:"e",ᵢ:"i",ⱼ:"j",ₒ:"o",ᵣ:"r",ᵤ:"u",ᵥ:"v",ₓ:"x"};String.prototype.latinise=function(){return this.replace(/[^A-Za-z0-9]/g,(function(t){return e[t]||t}))},String.prototype.latinize=String.prototype.latinise,String.prototype.isLatin=function(){return this===this.latinise()}}},t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.m=e,n.x=e=>{},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.hmd=e=>((e=Object.create(e)).children||(e.children=[]),Object.defineProperty(e,"exports",{enumerable:!0,set:()=>{throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+e.id)}}),e),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e={179:0},t=[[4146,216]],r=e=>{},a=(a,o)=>{for(var i,c,[s,l,u,f]=o,d=0,p=[];d<s.length;d++)c=s[d],n.o(e,c)&&e[c]&&p.push(e[c][0]),e[c]=0;for(i in l)n.o(l,i)&&(n.m[i]=l[i]);for(u&&u(n),a&&a(o);p.length;)p.shift()();return f&&t.push.apply(t,f),r()},o=self.webpackChunkapp=self.webpackChunkapp||[];function i(){for(var r,a=0;a<t.length;a++){for(var o=t[a],i=!0,c=1;c<o.length;c++){var s=o[c];0!==e[s]&&(i=!1)}i&&(t.splice(a--,1),r=n(n.s=o[0]))}return 0===t.length&&(n.x(),n.x=e=>{}),r}o.forEach(a.bind(null,0)),o.push=a.bind(null,o.push.bind(o));var c=n.x;n.x=()=>(n.x=c||(e=>{}),(r=i)())})(),n.x()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,