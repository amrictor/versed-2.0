(()=>{var e={3144:(e,t,n)=>{"use strict";var r=n(7294),a=n(3935),o=n(4751);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var i=n(3727),c=n(3038),s=n.n(c),l=n(4890),u=n(5977),f=n(6010),d=n(3457),p=n(2098),m=n(5784),g=n(1246),h=n(3770),y=n(6652),v=n(7812),E=n(6479),S=n.n(E);const b=function(e){var t=e.playing,n=e.songId,a=S()(e,["playing","songId"]),o=(0,r.useState)(0),i=s()(o,2),c=i[0],l=i[1];(0,r.useEffect)((function(){l(0)}),[n]),(0,r.useEffect)((function(){var e;return t?e=setInterval(u,1e3):clearInterval(e),function(){return clearInterval(e)}}),[t]);var u=function(){l((function(e){return e+1}))},f=function(e){if(e<100)return("0"+e).slice(-2)};return r.createElement("div",a,f(Math.floor(c/3600)%24),":",f(Math.floor(c/60)%60),":",f(c%60))};var x=n(4575),k=n.n(x),O=n(3913),w=n.n(O),T=n(2205),A=n.n(T),C=n(8585),P=n.n(C),N=n(9754),j=n.n(N),I=n(8679),R=n.n(I),_=n(9713),Z=n.n(_),L=n(1143),U=n.n(L),G=n(1609),D=n.n(G),W=n(3560),z=n.n(W),F=n(7037),Y=n.n(F),B=n(3945),H=n.n(B),M=n(3218),K=n.n(M);const q=function(e){var t={dispatch:z(),subscribe:z(),getState:z(),replaceReducer:z(),runSaga:z(),injectedReducers:K(),injectedSagas:K()};U()(H()(e,t),"(app/utils...) injectors: Expected a valid redux store")};function J(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function $(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?J(Object(n),!0).forEach((function(t){Z()(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):J(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var V="@@saga-injector/daemon",X="@@saga-injector/once-till-unmount",Q=["@@saga-injector/restart-on-remount",V,X],ee=function(e){return U()(Y()(e)&&!D()(e),"(app/utils...) injectSaga: Expected `key` to be a non empty string")},te=function(e){var t={saga:z(),mode:function(e){return Y()(e)&&Q.includes(e)}};U()(H()(e,t),"(app/utils...) injectSaga: Expected a valid saga descriptor")};function ne(e,t){return function(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2?arguments[2]:void 0;t||q(e);var o=$($({},r),{},{mode:r.mode||V}),i=o.saga,c=o.mode;ee(n),te(o);var s=Reflect.has(e.injectedSagas,n);(!s||s&&c!==V&&c!==X)&&(e.injectedSagas[n]=$($({},o),{},{task:e.runSaga(i,a)}))}}function re(e,t){return function(n){if(t||q(e),ee(n),Reflect.has(e.injectedSagas,n)){var r=e.injectedSagas[n];r.mode&&r.mode!==V&&(r.task.cancel(),e.injectedSagas[n]="done")}}}const ae=function(e){var t=e.key,n=e.saga,a=e.mode;return function(e){var i=function(o){A()(l,o);var i,c,s=(i=l,c=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=j()(i);if(c){var n=j()(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return P()(this,e)});function l(e,r){var o;return k()(this,l),(o=s.call(this,e,r)).injectors=function(e){return q(e),{injectSaga:ne(e,!0),ejectSaga:re(e,!0)}}(r.store),o.injectors.injectSaga(t,{saga:n,mode:a},o.props),o}return w()(l,[{key:"componentWillUnmount",value:function(){this.injectors.ejectSaga(t)}},{key:"render",value:function(){return r.createElement(e,this.props)}}]),l}(r.Component);return i.WrappedComponent=e,i.contextType=o.ET,i.displayName="withSaga(".concat(e.displayName||e.name||"Component",")"),R()(i,e)}};var oe=n(5369),ie=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=new Date;r.setTime(r.getTime()+24*n*60*60*1e3);var a=0===n?"":"expires="+r.toUTCString()+";path=/";document.cookie=e+"="+JSON.stringify(t)+";"+a},ce=function(e){var t=function(e){for(var t=e+"=",n=document.cookie.split(";"),r=0;r<n.length;r++){for(var a=n[r];" "===a.charAt(0);)a=a.substring(1);if(0===a.indexOf(t))return a.substring(t.length,a.length)}return""}(e);try{return JSON.parse(t)}catch(e){return t}};function se(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}var le=(0,oe.d0)(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?se(Object(n),!0).forEach((function(t){Z()(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):se(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},ce("settings")||{theme:"light",playOnLoad:!0,seed:"",spotifyToken:null}));const ue=function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:le,n=arguments.length>1?arguments[1]:void 0;switch(n.type){case"SET_THEME":e=t.set("theme",n.theme);break;case"SET_PLAY_ON_LOAD":e=t.set("playOnLoad",n.playOnLoad);break;case"SET_SEED":e=t.set("seed",n.seed);break;case"SET_SPOTIFY_TOKEN":e=t.set("spotifyToken",n.token);break;default:return t}return ie("settings",e.toJSON(),365),e};function fe(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function de(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?fe(Object(n),!0).forEach((function(t){Z()(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):fe(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}const pe=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=(0,l.UY)(de({global:ue},e));return t};function me(e,t){return function(n,r){t||q(e),U()(Y()(n)&&!D()(n)&&z()(r),"(app/utils...) injectReducer: Expected `reducer` to be a reducer function"),Reflect.has(e.injectedReducers,n)&&e.injectedReducers[n]===r||(e.injectedReducers[n]=r,e.replaceReducer(pe(e.injectedReducers)))}}const ge=function(e){var t=e.key,n=e.reducer;return function(e){var a=function(a){A()(s,a);var o,i,c=(o=s,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=j()(o);if(i){var n=j()(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return P()(this,e)});function s(e,r){var a;return k()(this,s),a=c.call(this,e,r),function(e){return q(e),{injectReducer:me(e,!0)}}(r.store).injectReducer(t,n),a}return w()(s,[{key:"render",value:function(){return r.createElement(e,this.props)}}]),s}(r.Component);return a.WrappedComponent=e,a.contextType=o.ET,a.displayName="withReducer(".concat(e.displayName||e.name||"Component",")"),R()(a,e)}};var he=!0,ye=(0,oe.d0)({currentSong:null,currentSource:null,currentIndex:0,shuffle:!1,shuffleMap:null,spotifyPlaylists:null,spotifyPlaylistsOffset:0,totalSpotifyPlaylists:null,playing:he,hasWon:!1,hasForfeited:!1}),ve=n(7757),Ee=n.n(ve),Se=n(2905),be=n.n(Se),xe=n(4857),ke=n(2222);const Oe=function(){return(0,ke.P1)((function(e){return e.app||le}),(function(e){return e.toJS()}))};function we(e){return e.headers.get("Content-Type").includes("json")?e.json():e.text()}function Te(e){if(e.status>=200&&e.status<300)return 204===e.status&&(e.json=function(){return""}),e;var t=new Error(e.statusText);throw t.response=e,t}function Ae(e,t){var n=e.includes("http")?e:"https://localhost:8080".concat(e);return fetch(n,t).then(Te).then(we)}function Ce(e,t){return"get"===e||"delete"===e?{method:e,credentials:"same-origin",headers:{Accept:"*/*"}}:{method:"post",credentials:"same-origin",headers:{"Content-Type":"application/json",Accept:"*/*"},body:JSON.stringify(t)}}var Pe=function(e,t){return{type:"GET_SPOTIFY_SONG",id:e,push:t}},Ne=function(e){return{type:"GET_SPOTIFY_PLAYLISTS",offset:e}},je=function(e,t,n){return{type:"GET_SPOTIFY_PLAYLISTS_SUCCESS",playlists:e,offset:t,total:n}},Ie=function(e){return{type:"GET_GENIUS_SONG_SUCCESS",song:e}},Re=Ee().mark(Ue),_e=Ee().mark(Ge),Ze=Ee().mark(De),Le=Ee().mark(We);function Ue(e){var t,n,r,a;return Ee().wrap((function(o){for(;;)switch(o.prev=o.next){case 0:return o.next=2,(0,xe.Ys)(Oe());case 2:return t=o.sent,n=t.spotifyToken,o.prev=4,r={accessToken:n.access,offset:e.offset},o.next=8,Ae("/api/public/playlists",Ce("post",r));case 8:return a=o.sent,o.next=11,(0,xe.gz)(je(a.items,a.offset,a.total));case 11:o.next=17;break;case 13:return o.prev=13,o.t0=o.catch(4),o.next=17,(0,xe.gz)(je([],0,null));case 17:case"end":return o.stop()}}),Re,null,[[4,13]])}function Ge(e){var t,n;return Ee().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,t={id:e.id},r.next=4,Ae("/api/public/song",Ce("post",t));case 4:(n=r.sent).genius?e.push("/songs/".concat(n.genius)):alert("We can't find the lyrics for this song!"),r.next=10;break;case 8:r.prev=8,r.t0=r.catch(0);case 10:case"end":return r.stop()}}),_e,null,[[0,8]])}function De(e){var t,n,r,a,o;return Ee().wrap((function(i){for(;;)switch(i.prev=i.next){case 0:return i.prev=0,i.next=4,Ae("https://api.genius.com/songs/".concat(e.id,"?access_token=").concat("4qtBMiQeR5pD1zFm-vGmFV6j5khGAiRQskTCLXyuGbxeYGbnXrTnXIyA5n2iXjdg"),Ce("get"));case 4:return t=i.sent,n=t.response,i.next=8,Ae("https://server.amrictor.com:8888/".concat(n.song.url));case 8:return r=i.sent,a=be().load(r),(o={}).title=n.song.title?n.song.title:"N/A",o.album=n.song.album?n.song.album.name:"N/A",o.artist=n.song.primary_artist?n.song.primary_artist.name:"N/A",o.url=n.song.url,o.lyrics=a(".lyrics").text().replace(/\[.*\]/g,"").trim().replace(/[’‘]/g,"'").split(/[\u200B\r\n\s,?!:;().…"“”—\-–_]+/).filter((function(e){return!e.match(/^[\s']+$/)&&e})),i.next=18,(0,xe.gz)(Ie(o));case 18:i.next=23;break;case 20:i.prev=20,i.t0=i.catch(0),alert("Something went wrong. Try playing a different song");case 23:case"end":return i.stop()}}),Ze,null,[[0,20]])}function We(){return Ee().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,xe.$6)([(0,xe.Fm)("GET_SPOTIFY_PLAYLISTS",Ue),(0,xe.Fm)("GET_SPOTIFY_SONG",Ge),(0,xe.Fm)("GET_GENIUS_SONG",De)]);case 2:case"end":return e.stop()}}),Le)}var ze=n(8105),Fe=n(2427);const Ye=(0,Fe.Z)((function(e){return{root:{background:ze.Z[900],color:"white",height:75,display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"center"},actions:{display:"flex",justifyContent:"center",alignItems:"center"},actionBtn:{margin:5}}})),Be=function(){return(0,ke.P1)((function(e){return e.controlPanel||ye}),(function(e){return e.toJS()}))};var He=Be(),Me=ge({key:"controlPanel",reducer:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ye,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"LOAD_NEXT_SONG":var n=e.get("currentIndex"),r=e.get("currentSource"),a=n<r.length-1?n+1:0;return e.set("currentIndex",e.get("shuffleMap")[a]);case"LOAD_PREV_SONG":var o=e.get("currentIndex"),i=e.get("currentSource"),c=o>0?o-1:i.length-1;return e.set("currentIndex",e.get("shuffleMap")[c]);case"SET_SOURCE":return e.set("currentSource",t.source).set("shuffleMap",t.source.map((function(e,t){return t})));case"GET_SPOTIFY_PLAYLISTS":return e.set("spotifyPlaylists",null);case"GET_SPOTIFY_PLAYLISTS_SUCCESS":return e.set("spotifyPlaylists",t.playlists).set("spotifyPlaylistsOffset",t.offset).set("totalSpotifyPlaylists",t.total);case"GET_GENIUS_SONG":return e.set("currentSong",null).set("playing",he).set("hasWon",!1).set("hasForfeited",!1).set("loading",!0);case"GET_GENIUS_SONG_SUCCESS":return e.set("currentSong",t.song).set("loading",!1);case"TOGGLE_SHUFFLE":var s=e.get("currentSource").map((function(e,t){return t}));if(!e.get("shuffle"))for(var l=s.length-1;l>0;l--){var u=Math.floor(Math.random()*(l+1)),f=[s[u],s[l]];s[l]=f[0],s[u]=f[1]}return e.set("shuffle",!e.get("shuffle")).set("shuffleMap",s);case"TOGGLE_PAUSE":return e.set("playing",!e.get("playing"));case"FORFEIT":return e.set("hasForfeited",!0);case"WIN":return e.set("hasWon",!0);default:return e}}}),Ke=ae({key:"controlPanel",saga:We});const qe=(0,l.qC)(Me,Ke)((function(){var e=(0,u.k6)(),t=(0,o.I0)(),n=Ye(),a=(0,o.v9)(He),i=a.playing,c=a.shuffle,s=a.currentSong,l=a.currentSource,f=a.currentIndex,d=a.spotifyPlaylists,E=a.hasForfeited,S=a.hasWon;return(0,r.useEffect)((function(){d||t(Ne())}),[]),(0,r.useEffect)((function(){l&&t(Pe(l[f].id,e.push))}),[f,JSON.stringify(l)]),r.createElement("div",{className:n.root},s&&r.createElement(b,{playing:i&&!E&&!S,songId:s.id,className:n.timer}),s&&r.createElement("div",{className:n.actions},l&&r.createElement(v.Z,{style:c?{color:"#1DB954"}:{},className:n.actionBtn,size:"small",onClick:function(){return t({type:"TOGGLE_SHUFFLE"})}},r.createElement(p.Z,null)),l&&r.createElement(v.Z,{className:n.actionBtn,size:"small",onClick:function(){return t({type:"LOAD_PREV_SONG"})}},r.createElement(m.Z,null)),r.createElement(v.Z,{disabled:E||S,className:n.actionBtn,size:"small",onClick:function(){return t({type:"TOGGLE_PAUSE"})}},i?r.createElement(h.Z,null):r.createElement(y.Z,null)),l&&r.createElement(v.Z,{className:n.actionBtn,size:"small",onClick:function(){return t({type:"LOAD_NEXT_SONG"})}},r.createElement(g.Z,null))),!s&&"Nothing playing.")})),Je=(0,Fe.Z)({root:{background:ze.Z[700],color:"white",height:"100%",width:"100%",padding:10},header:{fontSize:22,fontWeight:500,marginBottom:10,paddingBottom:10,borderBottom:"1px solid white"}}),$e=function(){var e=Je();return r.createElement("div",{className:e.root},r.createElement("div",{className:e.header},"Welcome to Versed"),r.createElement("div",null,"Versed is a lyric quiz platform developed independently using the Spotify and Genius APIs."),r.createElement("br",null),r.createElement("div",null,"Visit the settings page to integrate with your personal Spotify account."))};var Ve=(0,oe.d0)({tracks:[],trackOffset:0,totalTracks:null,loading:!1}),Xe=function(e,t){return{type:"SEARCH_TRACKS",query:e,offset:t}},Qe=Ee().mark(tt),et=Ee().mark(nt);function tt(e){var t,n;return Ee().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,t={query:e.query,offset:e.offset},r.next=4,Ae("/api/public/search",Ce("post",t));case 4:return n=r.sent,r.next=7,(0,xe.gz)({type:"SEARCH_TRACKS_SUCCESS",tracks:n.items,offset:n.offset,total:n.total});case 7:r.next=13;break;case 9:return r.prev=9,r.t0=r.catch(0),r.next=13,(0,xe.gz)({type:"SEARCH_TRACKS_FAILURE"});case 13:case"end":return r.stop()}}),Qe,null,[[0,9]])}function nt(){return Ee().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,xe.$6)([(0,xe.Fm)("SEARCH_TRACKS",tt)]);case 2:case"end":return e.stop()}}),et)}const rt=(0,Fe.Z)({root:{background:ze.Z[700],color:"white",height:"100%",width:"100%",overflow:"auto"},search:{background:ze.Z[700],position:"sticky",top:0,zIndex:10,padding:"10px 0px",margin:"0px 10px",display:"flex",alignItems:"center",borderBottom:"1px solid white"},button:{maxWidth:100,height:30,padding:5,cursor:"pointer",outline:"none",borderRadius:5,border:"0px",backgroundColor:ze.Z[900],color:"white",textTransform:"uppercase",fontWeight:600,transition:".2s","&:hover":{backgroundColor:"white",color:ze.Z[900]},"&:disabled":{backgroundColor:ze.Z[500],color:ze.Z[900],cursor:"default"}},input:{height:30,padding:3,flexGrow:1,outline:"none",borderRadius:8,border:"0px",boxShadow:"0px 0px red",transition:"box-shadow .2s","&:focus":{border:"0px solid black",boxShadow:"3px 3px ".concat(ze.Z[900])},marginRight:10},trackCard:{display:"flex",padding:10,margin:5,outline:"1px solid black"},albumCover:{marginRight:10},trackTitle:{fontWeight:600},trackAlbum:{fontStyle:"italics"},trackArtists:{fontStyle:"italics"},noResults:{textAlign:"center",padding:"40px 5px"}});var at=n(5697),ot=n.n(at),it=n(8126),ct=n(6775),st=n(4126),lt=(0,n(1120).Z)({emptyList:{marginTop:100,display:"flex",justifyContent:"center",alignItems:"center"},song:{flexShrink:1,padding:"3px 0px",display:"flex",fontSize:12},songBlock:{display:"flex",alignItems:"center",cursor:"pointer",padding:5,justifyContent:"space-between","& *":{flex:"0 1 1",minWidth:0},"&:hover":{backgroundColor:"rgba(0,0,0,0.4)"}},albumCover:{marginRight:5,height:45,width:45,flexShrink:0},trackInfo:{flexShrink:1,minWidth:40,"& *":{whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis"}},trackTitle:{fontWeight:600},trackAlbum:{fontStyle:"italic"},trackArtists:{fontStyle:"italic"}}),ut=function(e){var t=r.useState(null),n=s()(t,2),a=n[0],i=n[1],c=(0,o.I0)(),l=(0,u.k6)(),f=[{name:"Play",action:function(){return c(Pe(e.track.id,l.push))}},e.customPlaylist?{name:"Delete",action:function(){return c({type:"DELETE_SONG",song:e.track})}}:{name:"Add to Custom Playlist",action:function(){return c({type:"ADD_SONG",song:e.track})}},{name:"View Album",action:function(){return l.push("/album/".concat(e.track.album.id))}}];return r.createElement("div",null,r.createElement(v.Z,{size:"small",onClick:function(e){e.preventDefault(),e.stopPropagation(),i(e.currentTarget)}},r.createElement(st.Z,null)),r.createElement(it.Z,{anchorEl:a,keepMounted:!0,open:!!a,onClose:function(){return i(null)},PaperProps:{style:{maxHeight:216,width:"20ch"}}},f.map((function(e){return r.createElement(ct.Z,{key:e.name,onClick:function(t){t.preventDefault(),t.stopPropagation(),e.action(),i(null)}},e.name)}))))},ft=function(e){var t=e.tracks,n=e.customPlaylist,a=(0,u.k6)(),i=(0,o.I0)(),c=lt();return r.createElement("div",null,t&&t.map((function(e){return r.createElement("div",{className:c.songBlock,key:e.id,onClick:function(){return i(Pe(e.id,a.push))}},r.createElement("div",{className:c.song},r.createElement("img",{className:c.albumCover,src:e.album.images&&3===e.album.images.length&&e.album.images[2].url}),r.createElement("div",{className:c.trackInfo},r.createElement("div",{className:c.trackTitle},e.name),r.createElement("div",{className:c.trackAlbum},e.album.name),r.createElement("div",{className:c.trackArtists},e.artists.map((function(e){return e.name})).join(", ")))),r.createElement(ut,{track:e,customPlaylist:n}))})),t&&0===t.length&&r.createElement("div",{className:c.emptyList},"No tracks available."))};ft.propTypes={tracks:ot().array.isRequired};const dt=ft;var pt=(0,ke.P1)((function(e){return e.search}),(function(e){return e.toJS()})),mt=ge({key:"search",reducer:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Ve,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SEARCH_TRACKS":return e.set("loading",!0);case"SEARCH_TRACKS_SUCCESS":return e.set("tracks",t.tracks).set("trackOffset",t.offset).set("totalTracks",t.total).set("loading",!1);case"SEARCH_TRACKS_FAILURE":return e.set("loading",!1);default:return e}}}),gt=ae({key:"search",saga:nt});const ht=(0,l.qC)(mt,gt)((function(){var e=rt(),t=(0,o.I0)(),n=(0,o.v9)(pt),a=n.tracks,i=(n.trackOffset,n.totalTracks,n.loading),c=(0,r.useState)(""),l=s()(c,2),u=l[0],f=l[1];return r.createElement("div",{className:e.root},r.createElement("div",{className:e.search},r.createElement("input",{className:e.input,value:u,onChange:function(e){return f(e.target.value)},onKeyDown:function(e){"Enter"===e.key&&t(Xe(u,0))},disabled:i}),r.createElement("button",{className:e.button,onClick:function(){return t(Xe(u,0))},disabled:i},"Search")),r.createElement(dt,{tracks:a}))}));n(3261);const yt=(0,Fe.Z)({root:{background:ze.Z[700],color:"white",height:"100%",width:"100%",overflow:"hidden",position:"relative",display:"flex",alignItems:"center",justifyContent:"center"},game:{maxWidth:800,height:"80%",overflow:"auto",display:"flex",flexDirection:"column",justifyContent:"center",padding:20},info:{display:"flex",alignItems:"center",justifyContent:"center",margin:5,"& *":{margin:"0px 2vw"},minHeight:25},button:{height:25,padding:5,cursor:"pointer",outline:"none",borderRadius:5,border:"0px",backgroundColor:ze.Z[900],color:"white",textTransform:"uppercase",fontWeight:600,transition:".2s","&:hover":{backgroundColor:"white",color:ze.Z[900]},"&:disabled":{backgroundColor:ze.Z[500],color:ze.Z[900],cursor:"default"}},input:{height:30,padding:3,marginBottom:5,outline:"none",borderRadius:8,border:"0px",boxShadow:"0px 0px ".concat(ze.Z[900]),transition:"box-shadow .2s","&:focus":{border:"0px solid black",boxShadow:"3px 3px ".concat(ze.Z[900])}},lyrics:{overflowY:"auto",paddingRight:"1vw",display:"flex",flexWrap:"wrap"},word:{margin:"3px 2px",padding:"0px 3px",fontSize:"2vh",backgroundColor:"#cacaca",borderRadius:3,userSelect:"none",color:"black"},forfeit:{color:"red"},undiscovered:{color:"transparent"},pauseOverlay:{position:"absolute",textAlign:"center",display:"flex",alignItems:"center",justifyContent:"center",fontSize:35,top:0,right:0,left:0,bottom:0,background:"rgba(0,0,0,0.8)"}});function vt(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Et(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?vt(Object(n),!0).forEach((function(t){Z()(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):vt(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var St=Be();const bt=function(e){var t=yt(),n=(0,o.I0)(),a=(0,o.v9)(St),i=a.currentSong,c=a.hasForfeited,l=a.hasWon,d=a.playing,p=(0,u.UO)().id,m=(0,r.useState)({discoveredWords:[]}),g=s()(m,2),h=g[0],y=g[1];(0,r.useEffect)((function(){return n(function(e){return{type:"GET_GENIUS_SONG",id:e}}(p)),function(){return n(Ie(null))}}),[p]),(0,r.useEffect)((function(){S()&&n({type:"WIN"})}),[JSON.stringify(h.discoveredWords),i&&i.id]);var v=function(e,t){return(e=e.toLowerCase().replace(/'/g,"").latinise().trim())===(t=t.toLowerCase().replace(/'/g,"").latinise().trim())||!!(e.match(/^wh*[oah]{2,}$/)&&t.match(/^wh*[oah]{2,}$/)||e.match(/^o[oh]+$/)&&t.match(/^o[oh]+$/)||e.match(/^a[ah]+$/)&&t.match(/^a[ah]*$/)||e.match(/^h[ah]+$/)&&t.match(/^h[ah]*$/))},E=function(e){return h.discoveredWords.map((function(t){return v(t,e)})).includes(!0)},S=function(){return!!i&&JSON.stringify(h.discoveredWords)===JSON.stringify(i.lyrics)};return i?r.createElement("div",{className:t.root},r.createElement("div",{className:t.game},r.createElement("input",{className:t.input,type:"search",disabled:c||!d||l,onChange:function(e){var t=e.target.value;E(t)||i.lyrics.forEach((function(n,r){v(n,t)&&(function(e,t){var n,r=h.discoveredWords;r[t]=e,n={discoveredWords:r},y(Et(Et({},h),n))}(n,r),e.target.value="")}))}}),r.createElement("div",{className:t.info},r.createElement("div",null,h.discoveredWords.filter((function(e){return e})).length," / ",i.lyrics.length),r.createElement("button",{className:t.button,disabled:!d||c||l,onClick:function(){return n({type:"FORFEIT"})}},"Forfeit")),r.createElement("div",{className:t.lyrics},!d&&r.createElement("div",{className:t.pauseOverlay},"Paused"),i.lyrics.map((function(e,n){return r.createElement("div",{key:n,className:(0,f.Z)(t.word,E(e)&&d?void 0:c?t.forfeit:t.undiscovered)},e)}))))):r.createElement("div",{className:t.root},"Loading...")};var xt=(0,oe.d0)({tracks:[],trackOffset:0,totalTracks:null,loading:!1}),kt=function(e,t,n){return{type:"GET_PLAYLIST_SUCCESS",tracks:e,offset:t,total:n}},Ot=Ee().mark(Tt),wt=Ee().mark(At);function Tt(e){var t,n,r,a;return Ee().wrap((function(o){for(;;)switch(o.prev=o.next){case 0:return o.prev=0,o.next=3,(0,xe.Ys)(Oe());case 3:return t=o.sent,n=t.spotifyToken,r={accessToken:n.access,id:e.id,query:e.query,offset:e.offset},o.next=8,Ae("/api/public/playlist",Ce("post",r));case 8:return a=o.sent,o.next=11,(0,xe.gz)(kt(a.items,a.offset,a.total));case 11:o.next=17;break;case 13:return o.prev=13,o.t0=o.catch(0),o.next=17,(0,xe.gz)(kt([]));case 17:case"end":return o.stop()}}),Ot,null,[[0,13]])}function At(){return Ee().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,xe.$6)([(0,xe.Fm)("GET_PLAYLIST",Tt)]);case 2:case"end":return e.stop()}}),wt)}const Ct=(0,Fe.Z)({root:{background:ze.Z[700],color:"white",height:"100%",width:"100%",overflow:"auto"},loading:{height:"100%",width:"100%",display:"flex",justifyContent:"center",alignItems:"center"},search:{background:ze.Z[700],position:"sticky",top:0,padding:"5px 5px 0px 5px"},trackCard:{display:"flex",padding:10,margin:5,outline:"1px solid black"},albumCover:{marginRight:10},trackTitle:{fontWeight:600},trackAlbum:{fontStyle:"italics"},trackArtists:{fontStyle:"italics"},noResults:{textAlign:"center",padding:"40px 5px"}});var Pt=(0,ke.P1)((function(e){return e.playlist}),(function(e){return e.toJS()})),Nt=ge({key:"playlist",reducer:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:xt,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"GET_PLAYLIST":return e.set("loading",!0);case"GET_PLAYLIST_SUCCESS":return e.set("tracks",t.tracks).set("trackOffset",t.offset).set("totalTracks",t.total).set("loading",!1);case"SEARCH_TRACKS_FAILURE":return e.set("loading",!1);default:return e}}}),jt=ae({key:"playlist",saga:At});const It=(0,l.qC)(Nt,jt)((function(){var e=Ct(),t=(0,o.I0)(),n=(0,u.UO)().id,a=(0,o.v9)(Pt),i=a.tracks,c=(a.trackOffset,a.totalTracks,a.loading);return(0,r.useEffect)((function(){t(function(e,t,n){return{type:"GET_PLAYLIST",id:e,offset:void 0,total:void 0}}(n))}),[n]),r.createElement("div",{className:e.root},c?r.createElement("div",{className:e.loading},"Loading..."):r.createElement(dt,{tracks:i}))}));var Rt=(0,oe.d0)({tracks:[],trackOffset:0,totalTracks:null,loading:!1}),_t=function(e,t,n){return{type:"GET_ALBUM_SUCCESS",tracks:e,offset:t,total:n}},Zt=Ee().mark(Ut),Lt=Ee().mark(Gt);function Ut(e){var t,n,r,a;return Ee().wrap((function(o){for(;;)switch(o.prev=o.next){case 0:return o.prev=0,o.next=3,(0,xe.Ys)(Oe());case 3:return t=o.sent,n=t.spotifyToken,r={accessToken:n.access,id:e.id,query:e.query,offset:e.offset},o.next=8,Ae("/api/public/album",Ce("post",r));case 8:return a=o.sent,o.next=11,(0,xe.gz)(_t(a.items,a.offset,a.total));case 11:o.next=17;break;case 13:return o.prev=13,o.t0=o.catch(0),o.next=17,(0,xe.gz)(_t([]));case 17:case"end":return o.stop()}}),Zt,null,[[0,13]])}function Gt(){return Ee().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,xe.$6)([(0,xe.Fm)("GET_ALBUM",Ut)]);case 2:case"end":return e.stop()}}),Lt)}const Dt=(0,Fe.Z)({root:{background:ze.Z[700],color:"white",height:"100%",width:"100%",overflow:"auto"},loading:{height:"100%",width:"100%",display:"flex",justifyContent:"center",alignItems:"center"},outerAlbumHeader:{background:ze.Z[800],display:"flex",justifyContent:"center",alignItems:"center",position:"relative",height:150,marginBottom:50},innerAlbumHeader:{position:"absolute",bottom:"-40px",display:"flex",alignItems:"flex-end"},albumArt:{borderRadius:15,maxWidth:150,border:"10px solid ".concat(ze.Z[800])},albumInfo:{"& *":{whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis"},maxWidth:"25vw",marginLeft:5,marginBottom:40},albumTitle:{fontSize:25,fontWeight:600},albumArtists:{fontSize:20,fontWeight:400,fontStyle:"italic"},search:{background:ze.Z[700],position:"sticky",top:0,padding:"5px 5px 0px 5px"},trackCard:{display:"flex",padding:10,margin:5,outline:"1px solid black"},albumCover:{marginRight:10},trackTitle:{fontWeight:600},trackAlbum:{fontStyle:"italics"},trackArtists:{fontStyle:"italics"},noResults:{textAlign:"center",padding:"40px 5px"}});var Wt=(0,ke.P1)((function(e){return e.album}),(function(e){return e.toJS()})),zt=ge({key:"album",reducer:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Rt,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"GET_ALBUM":return e.set("loading",!0);case"GET_ALBUM_SUCCESS":return e.set("tracks",t.tracks).set("trackOffset",t.offset).set("totalTracks",t.total).set("loading",!1);case"SEARCH_TRACKS_FAILURE":return e.set("loading",!1);default:return e}}}),Ft=ae({key:"album",saga:Gt});const Yt=(0,l.qC)(zt,Ft)((function(){var e=Dt(),t=(0,o.I0)(),n=(0,u.UO)().id,a=(0,o.v9)(Wt),i=a.tracks,c=(a.trackOffset,a.totalTracks,a.loading);return(0,r.useEffect)((function(){t(function(e,t,n){return{type:"GET_ALBUM",id:e,offset:void 0,total:void 0}}(n))}),[n]),r.createElement("div",{className:e.root},c||0===i.length?r.createElement("div",{className:e.loading},"Loading..."):r.createElement("div",null,r.createElement("div",{className:e.outerAlbumHeader},r.createElement("div",{className:e.innerAlbumHeader},r.createElement("img",{className:e.albumArt,src:i[0].album.images[1].url}),r.createElement("div",{className:e.albumInfo},r.createElement("div",{className:e.albumTitle},i[0].album.name),r.createElement("div",{className:e.albumArtists},i[0].album.artists.map((function(e){return e.name})).join(", "))))),r.createElement(dt,{tracks:i})))}));var Bt=n(8884),Ht=n(366);const Mt=(0,Fe.Z)({root:{flexShrink:0,position:"relative",background:ze.Z[800],height:"100%",width:50,transition:".3s","&$sidebarOpen":{width:300},overflowY:"hidden"},toggleButton:{position:"absolute",top:10,right:10,width:30,height:30,zIndex:1},navButton:{"& svg":{marginRight:10},display:"flex",justifyContent:"left",alignItems:"center",textTransform:"none !important",fontWeight:"500 !important",fontSize:"16px !important",borderBottom:"1px solid white",borderRadius:"0px !important","&:last-child":{borderBottom:"0px !important"}},content:{padding:10,paddingTop:40,color:"white",zIndex:1,height:"100%",width:"100%",transition:".3s",transform:"translateX(-300px)","&$sidebarOpen":{transform:"translateX(0px) !important"},display:"flex",flexDirection:"column","& > *":{minHeight:"100px",overflow:"hidden"}},sidebar:{height:"100%"},sidebarOpen:{}});var Kt=n(9969),qt=n(8995),Jt=n(2448),$t=n(7154),Vt=n.n($t),Xt=n(282),Qt=function(e){var t=e.history,n=(e.location,e.match,e.staticContext,e.to),a=e.onClick,o=S()(e,["history","location","match","staticContext","to","onClick"]);return r.createElement(Xt.Z,Vt()({},o,{onClick:function(e){a&&a(e),t.push(n)}}))};Qt.propTypes={to:ot().string.isRequired,children:ot().node.isRequired};const en=(0,u.EN)(Qt),tn=(0,Fe.Z)({root:{flexShrink:0},navButton:{"& svg":{marginRight:10},display:"flex",justifyContent:"left",alignItems:"center",textTransform:"none !important",fontWeight:"500 !important",fontSize:"16px !important",borderBottom:"1px solid white",borderRadius:"0px !important","&:last-child":{borderBottom:"0px !important"}}}),nn=function(){var e=tn();return r.createElement("div",{className:e.root},r.createElement(en,{fullWidth:!0,className:e.navButton,to:"/"},r.createElement(Jt.Z,null)," Home"),r.createElement(en,{fullWidth:!0,className:e.navButton,to:"/search"},r.createElement(qt.Z,null)," Search"),r.createElement(en,{fullWidth:!0,className:e.navButton,to:"/settings"},r.createElement(Kt.Z,null)," Settings"))},rn=(0,Fe.Z)({root:{flexShrink:1,display:"flex",flexDirection:"column",maxHeight:300},placeholder:{position:"absolute",top:0,width:50,background:ze.Z[800]},playlistsList:{color:"white",backgroundColor:"rgba(0,0,0,0.3)",overflow:"auto",fontSize:12},header:{color:"white",fontSize:16,textAlign:"center",padding:"10px 0px"},playlist:{whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis",padding:"5px 10px",cursor:"pointer","&:hover":{backgroundColor:"rgba(0,0,0,0.4)"}},pagination:{flexShrink:0}});var an=n(7394);const on=function(){var e=rn(),t=(0,o.I0)(),n=(0,u.k6)(),a=(0,o.v9)(Oe()).spotifyToken,i=(0,o.v9)(Be()),c=i.spotifyPlaylists,s=i.spotifyPlaylistsOffset,l=i.totalSpotifyPlaylists;return(0,r.useEffect)((function(){t(Ne())}),[JSON.stringify(a)]),a&&r.createElement("div",{className:e.root},r.createElement("div",{className:e.header},"My Spotify Playlists"),r.createElement("div",{className:e.playlistsList},c&&c.map((function(t){return r.createElement("div",{className:e.playlist,key:t.id,onClick:function(){return n.push("/playlist/".concat(t.id))}},t.name)}))),r.createElement(an.Z,{component:"div",className:e.pagination,rowsPerPageOptions:[20],count:l||0,rowsPerPage:20,page:s/20,onChangePage:function(e,n){return t(Ne(20*n))}}))},cn=(0,Fe.Z)((function(e){return{root:{flexShrink:1,display:"flex",flexDirection:"column",maxHeight:300},playlist:{flexShrink:1,color:"white",backgroundColor:"rgba(0,0,0,0.3)",overflow:"auto"},header:{flexShrink:0,color:"white",fontSize:16,padding:"10px 0px",display:"flex",justifyContent:"center",alignItems:"center","& div":{marginRight:10}},song:{flexShrink:1,padding:"3px 0px",display:"flex",fontSize:12},songBlock:{display:"flex",alignItems:"center",cursor:"grab",padding:5,justifyContent:"space-between","& *":{flex:"0 1 1",minWidth:0},"&:hover":{backgroundColor:"rgba(0,0,0,0.4)"}},dragHandle:{marginRight:5,alignSelf:"center",flexShrink:0},albumCover:{marginRight:5,height:45,width:45,flexShrink:0},trackInfo:{flexShrink:1,minWidth:40,"& *":{whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis"}},trackTitle:{fontWeight:600},trackAlbum:{fontStyle:"italic"},trackArtists:{fontStyle:"italic"}}}));var sn=n(319),ln=n.n(sn),un=(0,oe.d0)({customPlaylist:[]}).set("customPlaylist",ce("customPlaylist")||[]),fn=(0,ke.P1)((function(e){return e.customPlaylist||un}),(function(e){return e.toJS()}));const dn=ge({key:"customPlaylist",reducer:function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:un,n=arguments.length>1?arguments[1]:void 0;switch(n.type){case"ADD_SONG":e=t.set("customPlaylist",[].concat(ln()(t.get("customPlaylist")),[n.song]));break;case"DELETE_SONG":e=t.set("customPlaylist",t.get("customPlaylist").filter((function(e){return e.id!==n.song.id})));break;default:return t}return ie("customPlaylist",e.get("customPlaylist"),365),e}})((function(){var e=(0,o.I0)(),t=cn(),n=(0,o.v9)(fn).customPlaylist;return r.createElement("div",{className:t.root},r.createElement("div",{className:t.header},r.createElement("div",null,"Custom Playlist"),n.length>0&&r.createElement(v.Z,{size:"small",onClick:function(){return e({type:"SET_SOURCE",source:n})}},r.createElement(y.Z,null))),r.createElement("div",{className:t.playlist},n.length>0?r.createElement(dt,{tracks:n,customPlaylist:!0}):r.createElement("div",{style:{padding:"30px 10px",fontSize:14,textAlign:"center"}},"Playlist is empty! Search for your favorite music or add songs from your Spotify playlists.")))})),pn=function(e){var t=e.open,n=e.toggleOpen,a=Mt();return r.createElement("div",{className:(0,f.Z)(a.root,t&&a.sidebarOpen)},r.createElement("div",{className:(0,f.Z)(a.sidebar,t&&a.sidebarOpen)},r.createElement(v.Z,{className:a.toggleButton,onClick:n},t?r.createElement(Ht.Z,null):r.createElement(Bt.Z,null)),r.createElement("div",{className:(0,f.Z)(a.content,t&&a.sidebarOpen)},r.createElement(nn,null),r.createElement(on,null),r.createElement(dn,null))))};var mn=function(e){return{type:"SET_SPOTIFY_TOKEN",token:e}},gn=n(1871);const hn=(0,Fe.Z)({root:{background:ze.Z[700],color:"white",height:"100%",width:"100%",padding:10},header:{fontSize:22,fontWeight:500,marginBottom:10,paddingBottom:10,borderBottom:"1px solid white"}});var yn=Ee().mark(Sn),vn=Ee().mark(bn),En=Ee().mark(xn);function Sn(){var e;return Ee().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,Ae("/api/public/authorize",Ce("get"));case 3:e=t.sent,window.location.href=e,(0,xe.gz)(Ne()),t.next=11;break;case 8:t.prev=8,t.t0=t.catch(0),alert("Unable to authenticate with spotify");case 11:case"end":return t.stop()}}),yn,null,[[0,8]])}function bn(e){var t,n;return Ee().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,t={code:e.code},r.next=4,Ae("/api/public/get-access-token",Ce("post",t));case 4:return n=r.sent,r.next=7,(0,xe.gz)(mn({access:n.accessToken,refresh:n.refreshToken}));case 7:r.next=11;break;case 9:r.prev=9,r.t0=r.catch(0);case 11:case"end":return r.stop()}}),vn,null,[[0,9]])}function xn(){return Ee().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,xe.$6)([(0,xe.Fm)("AUTHORIZE_SPOTIFY",Sn),(0,xe.Fm)("GET_SPOTIFY_TOKEN",bn)]);case 2:case"end":return e.stop()}}),En)}const kn=ae({key:"settings",saga:xn})((function(e){var t=hn(),n=(0,o.v9)(Oe()),a=(n.theme,n.seed,n.playOnLoad,n.spotifyToken),i=(0,o.I0)();return(0,r.useEffect)((function(){var t=new URLSearchParams(e.location.search);!a&&t.has("code")&&i({type:"GET_SPOTIFY_TOKEN",code:t.get("code")})})),r.createElement("div",{className:t.root},r.createElement("div",{className:t.header},"Settings"),r.createElement("div",null,"Spotify Integration"),a?r.createElement(Xt.Z,{onClick:function(){return i(mn(null))}},"Disconnect My Spotify ",r.createElement(gn.l4C,null)):r.createElement("div",null,r.createElement(Xt.Z,{onClick:function(){return i({type:"AUTHORIZE_SPOTIFY"})}},"Connect My Spotify ",r.createElement(gn.l4C,null)),r.createElement("div",null,"Connecting Versed with your Spotify account will allow you to sync your playlists between applications.")))})),On=(0,n(8548).Z)({palette:{type:"dark"}}),wn=(0,Fe.Z)((function(e){return{root:{height:"100vh",display:"flex",flexDirection:"column"},body:{height:"calc(100% - 75px)",display:"flex"},sidebarOpen:{},content:{overflow:"auto",width:"calc(100% - 50px) !important","&$sidebarOpen":{width:"calc(100% - 300px)"}},placeholder:{height:"100%",width:50,background:ze.Z[800]}}}));var Tn=Ee().mark(Cn),An=Ee().mark(Pn);function Cn(){var e,t,n,r;return Ee().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,a.next=3,(0,xe.Ys)(Oe());case 3:if(e=a.sent,t=e.spotifyToken){a.next=7;break}return a.abrupt("return");case 7:return n={refreshToken:t.refresh},a.next=10,Ae("/api/public/refresh-access-token",Ce("post",n));case 10:return r=a.sent,a.next=13,(0,xe.gz)(mn({access:r,refresh:t.refresh}));case 13:a.next=17;break;case 15:a.prev=15,a.t0=a.catch(0);case 17:case"end":return a.stop()}}),Tn,null,[[0,15]])}function Pn(){return Ee().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,xe.$6)([(0,xe.Fm)("REFRESH_SPOTIFY_TOKEN",Cn)]);case 2:case"end":return e.stop()}}),An)}var Nn=ge({key:"app",reducer:ue}),jn=ae({key:"app",saga:Pn});const In=(0,l.qC)(Nn,jn)((function(){var e=(0,o.I0)();(0,r.useEffect)((function(){e({type:"REFRESH_SPOTIFY_TOKEN"}),setInterval((function(){e({type:"REFRESH_SPOTIFY_TOKEN"})}),36e5)}),[]);var t=(0,r.useState)(!0),n=s()(t,2),a=n[0],i=n[1],c=wn();return r.createElement(d.Z,{theme:On},r.createElement("div",{className:c.root},r.createElement("div",{className:c.body},r.createElement(pn,{open:a,toggleOpen:function(){return i(!a)}}),r.createElement("div",{className:(0,f.Z)(c.content,a&&c.sidebarOpen)},r.createElement(u.rs,null,r.createElement(u.AW,{exact:!0,path:"/",render:function(e){return r.createElement($e,e)}}),r.createElement(u.AW,{path:"/search",render:function(e){return r.createElement(ht,e)}}),r.createElement(u.AW,{path:"/settings",render:function(e){return r.createElement(kn,e)}}),r.createElement(u.AW,{path:"/songs/:id",render:function(e){return r.createElement(bt,e)}}),r.createElement(u.AW,{path:"/playlist/:id",render:function(e){return r.createElement(It,e)}}),r.createElement(u.AW,{path:"/album/:id",render:function(e){return r.createElement(Yt,e)}})))),r.createElement(qe,null)))}));var Rn=n(797),_n=n(8500),Zn=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=(0,Rn.ZP)(),n=(0,l.MT)(pe(),e,(0,_n.Uo)((0,l.md)(t)));return n.runSaga=t.run,n.injectedReducers={},n.injectedSagas={},n}({});a.render(r.createElement(o.zt,{store:Zn},r.createElement(i.VK,null,r.createElement(In,null))),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()}))},3261:()=>{var e={Á:"A",Ă:"A",Ắ:"A",Ặ:"A",Ằ:"A",Ẳ:"A",Ẵ:"A",Ǎ:"A",Â:"A",Ấ:"A",Ậ:"A",Ầ:"A",Ẩ:"A",Ẫ:"A",Ä:"A",Ǟ:"A",Ȧ:"A",Ǡ:"A",Ạ:"A",Ȁ:"A",À:"A",Ả:"A",Ȃ:"A",Ā:"A",Ą:"A",Å:"A",Ǻ:"A",Ḁ:"A",Ⱥ:"A",Ã:"A",Ꜳ:"AA",Æ:"AE",Ǽ:"AE",Ǣ:"AE",Ꜵ:"AO",Ꜷ:"AU",Ꜹ:"AV",Ꜻ:"AV",Ꜽ:"AY",Ḃ:"B",Ḅ:"B",Ɓ:"B",Ḇ:"B",Ƀ:"B",Ƃ:"B",Ć:"C",Č:"C",Ç:"C",Ḉ:"C",Ĉ:"C",Ċ:"C",Ƈ:"C",Ȼ:"C",Ď:"D",Ḑ:"D",Ḓ:"D",Ḋ:"D",Ḍ:"D",Ɗ:"D",Ḏ:"D",ǲ:"D",ǅ:"D",Đ:"D",Ƌ:"D",Ǳ:"DZ",Ǆ:"DZ",É:"E",Ĕ:"E",Ě:"E",Ȩ:"E",Ḝ:"E",Ê:"E",Ế:"E",Ệ:"E",Ề:"E",Ể:"E",Ễ:"E",Ḙ:"E",Ë:"E",Ė:"E",Ẹ:"E",Ȅ:"E",È:"E",Ẻ:"E",Ȇ:"E",Ē:"E",Ḗ:"E",Ḕ:"E",Ę:"E",Ɇ:"E",Ẽ:"E",Ḛ:"E",Ꝫ:"ET",Ḟ:"F",Ƒ:"F",Ǵ:"G",Ğ:"G",Ǧ:"G",Ģ:"G",Ĝ:"G",Ġ:"G",Ɠ:"G",Ḡ:"G",Ǥ:"G",Ḫ:"H",Ȟ:"H",Ḩ:"H",Ĥ:"H",Ⱨ:"H",Ḧ:"H",Ḣ:"H",Ḥ:"H",Ħ:"H",Í:"I",Ĭ:"I",Ǐ:"I",Î:"I",Ï:"I",Ḯ:"I",İ:"I",Ị:"I",Ȉ:"I",Ì:"I",Ỉ:"I",Ȋ:"I",Ī:"I",Į:"I",Ɨ:"I",Ĩ:"I",Ḭ:"I",Ꝺ:"D",Ꝼ:"F",Ᵹ:"G",Ꞃ:"R",Ꞅ:"S",Ꞇ:"T",Ꝭ:"IS",Ĵ:"J",Ɉ:"J",Ḱ:"K",Ǩ:"K",Ķ:"K",Ⱪ:"K",Ꝃ:"K",Ḳ:"K",Ƙ:"K",Ḵ:"K",Ꝁ:"K",Ꝅ:"K",Ĺ:"L",Ƚ:"L",Ľ:"L",Ļ:"L",Ḽ:"L",Ḷ:"L",Ḹ:"L",Ⱡ:"L",Ꝉ:"L",Ḻ:"L",Ŀ:"L",Ɫ:"L",ǈ:"L",Ł:"L",Ǉ:"LJ",Ḿ:"M",Ṁ:"M",Ṃ:"M",Ɱ:"M",Ń:"N",Ň:"N",Ņ:"N",Ṋ:"N",Ṅ:"N",Ṇ:"N",Ǹ:"N",Ɲ:"N",Ṉ:"N",Ƞ:"N",ǋ:"N",Ñ:"N",Ǌ:"NJ",Ó:"O",Ŏ:"O",Ǒ:"O",Ô:"O",Ố:"O",Ộ:"O",Ồ:"O",Ổ:"O",Ỗ:"O",Ö:"O",Ȫ:"O",Ȯ:"O",Ȱ:"O",Ọ:"O",Ő:"O",Ȍ:"O",Ò:"O",Ỏ:"O",Ơ:"O",Ớ:"O",Ợ:"O",Ờ:"O",Ở:"O",Ỡ:"O",Ȏ:"O",Ꝋ:"O",Ꝍ:"O",Ō:"O",Ṓ:"O",Ṑ:"O",Ɵ:"O",Ǫ:"O",Ǭ:"O",Ø:"O",Ǿ:"O",Õ:"O",Ṍ:"O",Ṏ:"O",Ȭ:"O",Ƣ:"OI",Ꝏ:"OO",Ɛ:"E",Ɔ:"O",Ȣ:"OU",Ṕ:"P",Ṗ:"P",Ꝓ:"P",Ƥ:"P",Ꝕ:"P",Ᵽ:"P",Ꝑ:"P",Ꝙ:"Q",Ꝗ:"Q",Ŕ:"R",Ř:"R",Ŗ:"R",Ṙ:"R",Ṛ:"R",Ṝ:"R",Ȑ:"R",Ȓ:"R",Ṟ:"R",Ɍ:"R",Ɽ:"R",Ꜿ:"C",Ǝ:"E",Ś:"S",Ṥ:"S",Š:"S",Ṧ:"S",Ş:"S",Ŝ:"S",Ș:"S",Ṡ:"S",Ṣ:"S",Ṩ:"S",ẞ:"SS",Ť:"T",Ţ:"T",Ṱ:"T",Ț:"T",Ⱦ:"T",Ṫ:"T",Ṭ:"T",Ƭ:"T",Ṯ:"T",Ʈ:"T",Ŧ:"T",Ɐ:"A",Ꞁ:"L",Ɯ:"M",Ʌ:"V",Ꜩ:"TZ",Ú:"U",Ŭ:"U",Ǔ:"U",Û:"U",Ṷ:"U",Ü:"U",Ǘ:"U",Ǚ:"U",Ǜ:"U",Ǖ:"U",Ṳ:"U",Ụ:"U",Ű:"U",Ȕ:"U",Ù:"U",Ủ:"U",Ư:"U",Ứ:"U",Ự:"U",Ừ:"U",Ử:"U",Ữ:"U",Ȗ:"U",Ū:"U",Ṻ:"U",Ų:"U",Ů:"U",Ũ:"U",Ṹ:"U",Ṵ:"U",Ꝟ:"V",Ṿ:"V",Ʋ:"V",Ṽ:"V",Ꝡ:"VY",Ẃ:"W",Ŵ:"W",Ẅ:"W",Ẇ:"W",Ẉ:"W",Ẁ:"W",Ⱳ:"W",Ẍ:"X",Ẋ:"X",Ý:"Y",Ŷ:"Y",Ÿ:"Y",Ẏ:"Y",Ỵ:"Y",Ỳ:"Y",Ƴ:"Y",Ỷ:"Y",Ỿ:"Y",Ȳ:"Y",Ɏ:"Y",Ỹ:"Y",Ź:"Z",Ž:"Z",Ẑ:"Z",Ⱬ:"Z",Ż:"Z",Ẓ:"Z",Ȥ:"Z",Ẕ:"Z",Ƶ:"Z",Ĳ:"IJ",Œ:"OE",ᴀ:"A",ᴁ:"AE",ʙ:"B",ᴃ:"B",ᴄ:"C",ᴅ:"D",ᴇ:"E",ꜰ:"F",ɢ:"G",ʛ:"G",ʜ:"H",ɪ:"I",ʁ:"R",ᴊ:"J",ᴋ:"K",ʟ:"L",ᴌ:"L",ᴍ:"M",ɴ:"N",ᴏ:"O",ɶ:"OE",ᴐ:"O",ᴕ:"OU",ᴘ:"P",ʀ:"R",ᴎ:"N",ᴙ:"R",ꜱ:"S",ᴛ:"T",ⱻ:"E",ᴚ:"R",ᴜ:"U",ᴠ:"V",ᴡ:"W",ʏ:"Y",ᴢ:"Z",á:"a",ă:"a",ắ:"a",ặ:"a",ằ:"a",ẳ:"a",ẵ:"a",ǎ:"a",â:"a",ấ:"a",ậ:"a",ầ:"a",ẩ:"a",ẫ:"a",ä:"a",ǟ:"a",ȧ:"a",ǡ:"a",ạ:"a",ȁ:"a",à:"a",ả:"a",ȃ:"a",ā:"a",ą:"a",ᶏ:"a",ẚ:"a",å:"a",ǻ:"a",ḁ:"a",ⱥ:"a",ã:"a",ꜳ:"aa",æ:"ae",ǽ:"ae",ǣ:"ae",ꜵ:"ao",ꜷ:"au",ꜹ:"av",ꜻ:"av",ꜽ:"ay",ḃ:"b",ḅ:"b",ɓ:"b",ḇ:"b",ᵬ:"b",ᶀ:"b",ƀ:"b",ƃ:"b",ɵ:"o",ć:"c",č:"c",ç:"c",ḉ:"c",ĉ:"c",ɕ:"c",ċ:"c",ƈ:"c",ȼ:"c",ď:"d",ḑ:"d",ḓ:"d",ȡ:"d",ḋ:"d",ḍ:"d",ɗ:"d",ᶑ:"d",ḏ:"d",ᵭ:"d",ᶁ:"d",đ:"d",ɖ:"d",ƌ:"d",ı:"i",ȷ:"j",ɟ:"j",ʄ:"j",ǳ:"dz",ǆ:"dz",é:"e",ĕ:"e",ě:"e",ȩ:"e",ḝ:"e",ê:"e",ế:"e",ệ:"e",ề:"e",ể:"e",ễ:"e",ḙ:"e",ë:"e",ė:"e",ẹ:"e",ȅ:"e",è:"e",ẻ:"e",ȇ:"e",ē:"e",ḗ:"e",ḕ:"e",ⱸ:"e",ę:"e",ᶒ:"e",ɇ:"e",ẽ:"e",ḛ:"e",ꝫ:"et",ḟ:"f",ƒ:"f",ᵮ:"f",ᶂ:"f",ǵ:"g",ğ:"g",ǧ:"g",ģ:"g",ĝ:"g",ġ:"g",ɠ:"g",ḡ:"g",ᶃ:"g",ǥ:"g",ḫ:"h",ȟ:"h",ḩ:"h",ĥ:"h",ⱨ:"h",ḧ:"h",ḣ:"h",ḥ:"h",ɦ:"h",ẖ:"h",ħ:"h",ƕ:"hv",í:"i",ĭ:"i",ǐ:"i",î:"i",ï:"i",ḯ:"i",ị:"i",ȉ:"i",ì:"i",ỉ:"i",ȋ:"i",ī:"i",į:"i",ᶖ:"i",ɨ:"i",ĩ:"i",ḭ:"i",ꝺ:"d",ꝼ:"f",ᵹ:"g",ꞃ:"r",ꞅ:"s",ꞇ:"t",ꝭ:"is",ǰ:"j",ĵ:"j",ʝ:"j",ɉ:"j",ḱ:"k",ǩ:"k",ķ:"k",ⱪ:"k",ꝃ:"k",ḳ:"k",ƙ:"k",ḵ:"k",ᶄ:"k",ꝁ:"k",ꝅ:"k",ĺ:"l",ƚ:"l",ɬ:"l",ľ:"l",ļ:"l",ḽ:"l",ȴ:"l",ḷ:"l",ḹ:"l",ⱡ:"l",ꝉ:"l",ḻ:"l",ŀ:"l",ɫ:"l",ᶅ:"l",ɭ:"l",ł:"l",ǉ:"lj",ſ:"s",ẜ:"s",ẛ:"s",ẝ:"s",ḿ:"m",ṁ:"m",ṃ:"m",ɱ:"m",ᵯ:"m",ᶆ:"m",ń:"n",ň:"n",ņ:"n",ṋ:"n",ȵ:"n",ṅ:"n",ṇ:"n",ǹ:"n",ɲ:"n",ṉ:"n",ƞ:"n",ᵰ:"n",ᶇ:"n",ɳ:"n",ñ:"n",ǌ:"nj",ó:"o",ŏ:"o",ǒ:"o",ô:"o",ố:"o",ộ:"o",ồ:"o",ổ:"o",ỗ:"o",ö:"o",ȫ:"o",ȯ:"o",ȱ:"o",ọ:"o",ő:"o",ȍ:"o",ò:"o",ỏ:"o",ơ:"o",ớ:"o",ợ:"o",ờ:"o",ở:"o",ỡ:"o",ȏ:"o",ꝋ:"o",ꝍ:"o",ⱺ:"o",ō:"o",ṓ:"o",ṑ:"o",ǫ:"o",ǭ:"o",ø:"o",ǿ:"o",õ:"o",ṍ:"o",ṏ:"o",ȭ:"o",ƣ:"oi",ꝏ:"oo",ɛ:"e",ᶓ:"e",ɔ:"o",ᶗ:"o",ȣ:"ou",ṕ:"p",ṗ:"p",ꝓ:"p",ƥ:"p",ᵱ:"p",ᶈ:"p",ꝕ:"p",ᵽ:"p",ꝑ:"p",ꝙ:"q",ʠ:"q",ɋ:"q",ꝗ:"q",ŕ:"r",ř:"r",ŗ:"r",ṙ:"r",ṛ:"r",ṝ:"r",ȑ:"r",ɾ:"r",ᵳ:"r",ȓ:"r",ṟ:"r",ɼ:"r",ᵲ:"r",ᶉ:"r",ɍ:"r",ɽ:"r",ↄ:"c",ꜿ:"c",ɘ:"e",ɿ:"r",ś:"s",ṥ:"s",š:"s",ṧ:"s",ş:"s",ŝ:"s",ș:"s",ṡ:"s",ṣ:"s",ṩ:"s",ʂ:"s",ᵴ:"s",ᶊ:"s",ȿ:"s",ß:"ss",ɡ:"g",ᴑ:"o",ᴓ:"o",ᴝ:"u",ť:"t",ţ:"t",ṱ:"t",ț:"t",ȶ:"t",ẗ:"t",ⱦ:"t",ṫ:"t",ṭ:"t",ƭ:"t",ṯ:"t",ᵵ:"t",ƫ:"t",ʈ:"t",ŧ:"t",ᵺ:"th",ɐ:"a",ᴂ:"ae",ǝ:"e",ᵷ:"g",ɥ:"h",ʮ:"h",ʯ:"h",ᴉ:"i",ʞ:"k",ꞁ:"l",ɯ:"m",ɰ:"m",ᴔ:"oe",ɹ:"r",ɻ:"r",ɺ:"r",ⱹ:"r",ʇ:"t",ʌ:"v",ʍ:"w",ʎ:"y",ꜩ:"tz",ú:"u",ŭ:"u",ǔ:"u",û:"u",ṷ:"u",ü:"u",ǘ:"u",ǚ:"u",ǜ:"u",ǖ:"u",ṳ:"u",ụ:"u",ű:"u",ȕ:"u",ù:"u",ủ:"u",ư:"u",ứ:"u",ự:"u",ừ:"u",ử:"u",ữ:"u",ȗ:"u",ū:"u",ṻ:"u",ų:"u",ᶙ:"u",ů:"u",ũ:"u",ṹ:"u",ṵ:"u",ᵫ:"ue",ꝸ:"um",ⱴ:"v",ꝟ:"v",ṿ:"v",ʋ:"v",ᶌ:"v",ⱱ:"v",ṽ:"v",ꝡ:"vy",ẃ:"w",ŵ:"w",ẅ:"w",ẇ:"w",ẉ:"w",ẁ:"w",ⱳ:"w",ẘ:"w",ẍ:"x",ẋ:"x",ᶍ:"x",ý:"y",ŷ:"y",ÿ:"y",ẏ:"y",ỵ:"y",ỳ:"y",ƴ:"y",ỷ:"y",ỿ:"y",ȳ:"y",ẙ:"y",ɏ:"y",ỹ:"y",ź:"z",ž:"z",ẑ:"z",ʑ:"z",ⱬ:"z",ż:"z",ẓ:"z",ȥ:"z",ẕ:"z",ᵶ:"z",ᶎ:"z",ʐ:"z",ƶ:"z",ɀ:"z",ﬀ:"ff",ﬃ:"ffi",ﬄ:"ffl",ﬁ:"fi",ﬂ:"fl",ĳ:"ij",œ:"oe",ﬆ:"st",ₐ:"a",ₑ:"e",ᵢ:"i",ⱼ:"j",ₒ:"o",ᵣ:"r",ᵤ:"u",ᵥ:"v",ₓ:"x"};String.prototype.latinise=function(){return this.replace(/[^A-Za-z0-9]/g,(function(t){return e[t]||t}))},String.prototype.latinize=String.prototype.latinise,String.prototype.isLatin=function(){return this===this.latinise()}}},t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.m=e,n.x=e=>{},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.hmd=e=>((e=Object.create(e)).children||(e.children=[]),Object.defineProperty(e,"exports",{enumerable:!0,set:()=>{throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+e.id)}}),e),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e={179:0},t=[[3144,216]],r=e=>{},a=(a,o)=>{for(var i,c,[s,l,u,f]=o,d=0,p=[];d<s.length;d++)c=s[d],n.o(e,c)&&e[c]&&p.push(e[c][0]),e[c]=0;for(i in l)n.o(l,i)&&(n.m[i]=l[i]);for(u&&u(n),a&&a(o);p.length;)p.shift()();return f&&t.push.apply(t,f),r()},o=self.webpackChunkapp=self.webpackChunkapp||[];function i(){for(var r,a=0;a<t.length;a++){for(var o=t[a],i=!0,c=1;c<o.length;c++){var s=o[c];0!==e[s]&&(i=!1)}i&&(t.splice(a--,1),r=n(n.s=o[0]))}return 0===t.length&&(n.x(),n.x=e=>{}),r}o.forEach(a.bind(null,0)),o.push=a.bind(null,o.push.bind(o));var c=n.x;n.x=()=>(n.x=c||(e=>{}),(r=i)())})(),n.x()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,